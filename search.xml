<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>常用元件-實作分頁的方法</title>
      <link href="/%E5%B8%B8%E7%94%A8%E5%85%83%E4%BB%B6/20200328/1675033308/"/>
      <url>/%E5%B8%B8%E7%94%A8%E5%85%83%E4%BB%B6/20200328/1675033308/</url>
      
        <content type="html"><![CDATA[<h1 id="壹、Vue-版本-computed-取餘數法"><a href="#壹、Vue-版本-computed-取餘數法" class="headerlink" title="壹、Vue 版本 - computed + 取餘數法"></a>壹、Vue 版本 - computed + 取餘數法</h1><p>使用 computed 將每筆資料在陣列中全都做出來，在使用分頁切換去讀取個個物件</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">data:&#123;</span><br><span class="line">  dataArr: &#123;&#125;; <span class="comment">// AJAX 資料已經存進來</span></span><br><span class="line">  currentPage: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用 computed 做分頁</span></span><br><span class="line"></span><br><span class="line">computed: &#123;</span><br><span class="line">  filterDataArr() &#123;</span><br><span class="line">    cosnt vm = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> newArr= &#123;&#125;;</span><br><span class="line">    vm.dataArr.forEach(<span class="function">(<span class="params">item,index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(index % <span class="number">10</span> === <span class="number">0</span>)&#123; <span class="comment">// % 10 代表每一個分頁有 10 筆的資料</span></span><br><span class="line">        newArr.push([]);  <span class="comment">// 假設資料有 100 筆，就會做出 10 個空陣列來存放每一頁的資料</span></span><br><span class="line">      &#125; </span><br><span class="line">      <span class="keyword">const</span> page = <span class="built_in">parseInt</span>(index / <span class="number">10</span>); </span><br><span class="line">      <span class="comment">// 用來計算有幾頁，假如是 0~9筆的資料，他就會存放在 newArr[0] 裡面</span></span><br><span class="line">      newArr[page].push(item)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newArr</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此，就可以在 html 裡面放入相對應的資料</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 網頁呈現資料 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">'item in filterDataArr[currentPage]'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>名字: &#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>電話: &#123;&#123; item.phone &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--分頁--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:class</span>=<span class="string">"&#123;'active': currentPage = page-1&#125;"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">v-for</span>=<span class="string">"page in filterDataArr.length"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> @<span class="attr">click.prevent</span>=<span class="string">"currentPage = page-1"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="貳、Vue-版本-使用-filter"><a href="#貳、Vue-版本-使用-filter" class="headerlink" title="貳、Vue 版本 - 使用 filter"></a>貳、Vue 版本 - 使用 filter</h1><p>透過 filter 回傳的資料，每次過濾不同分頁的資料</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">data:&#123;</span><br><span class="line">  data: []; <span class="comment">// AJAX 資料已經存進來</span></span><br><span class="line">  currentPage: <span class="number">0</span>;</span><br><span class="line">  pageContent: [],<span class="comment">//過濾後存放資料的地方</span></span><br><span class="line">  page: <span class="number">0</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">created() &#123;</span><br><span class="line">  <span class="keyword">const</span> vm = <span class="keyword">this</span></span><br><span class="line">  vm.page = data.length/<span class="number">10</span>; <span class="comment">// 計算出這筆資料有幾頁</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按下頁碼切換數字</span></span><br><span class="line">changePage (page = <span class="number">1</span>) &#123; <span class="comment">// 頁數預設是在第一頁</span></span><br><span class="line">  <span class="keyword">const</span> vm = <span class="keyword">this</span></span><br><span class="line">  vm.currentPage = page</span><br><span class="line">  vm.pageContent = vm.fbContent.filter(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> index &lt; page * <span class="number">10</span> &amp;&amp; index &gt;= (page - <span class="number">1</span>) * <span class="number">10</span> </span><br><span class="line">    <span class="comment">// 如果是第一頁就回傳 0~9 筆的資料</span></span><br><span class="line">    <span class="comment">// 第二頁就是 10~19 筆的資料 </span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HTML 部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 網頁呈現資料 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">'item in pageContent'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>名字: &#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>電話: &#123;&#123; item.phone &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 頁數分頁 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span> <span class="attr">:class</span>=<span class="string">"&#123;'active':item === currentPage&#125;"</span> <span class="attr">v-for</span>=<span class="string">"item in page"</span> <span class="attr">:key</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"#"</span> @<span class="attr">click.prevent</span>=<span class="string">"changePage(item)"</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常用元件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用元件 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[ES6 展開運算子(Spread Operator)、其餘參數(Rest Operator)]</title>
      <link href="/javascript/20200325/3189483925/"/>
      <url>/javascript/20200325/3189483925/</url>
      
        <content type="html"><![CDATA[<h1 id="一、展開運算子-Spread-Operator"><a href="#一、展開運算子-Spread-Operator" class="headerlink" title="一、展開運算子(Spread Operator)"></a>一、展開運算子(Spread Operator)</h1><h2 id="1-功能"><a href="#1-功能" class="headerlink" title="1. 功能"></a>1. 功能</h2><ul><li><p><strong>展開</strong>: 展開運算子可以將陣列展開成個別數值</p></li><li><p><strong>合併</strong>: 使用兩個以上的展開運算子合併陣列</p></li><li><p><strong>轉換</strong>: 展開運算子可以將類陣列(array-like)和可迭代(iterable)變成陣列(array)</p></li><li><p><strong>淺層拷貝</strong>: 複製一個陣列，並且這個陣列與原本的陣列沒有傳參考的特性</p><a id="more"></a><h3 id="a-展開"><a href="#a-展開" class="headerlink" title="a. 展開"></a>a. 展開</h3></li><li><p>展開運算子可以將陣列展開成個別數值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array = [<span class="string">'可'</span>, <span class="string">'黏'</span>, <span class="string">'阿'</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(...array) <span class="comment">// 可 黏 阿</span></span><br></pre></td></tr></table></figure></li><li><p>也可以將字串展開</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'FaDaChia'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(...str); <span class="comment">// F a D a C h i a</span></span><br></pre></td></tr></table></figure></li><li><p>將陣列展開，帶入函式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b + c</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> args = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">add(...args) <span class="comment">// 6</span></span><br></pre></td></tr></table></figure><h3 id="b-合併"><a href="#b-合併" class="headerlink" title="b. 合併"></a>b. 合併</h3><p>將陣列展開成數值後，再用陣列[]合併成陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="string">'你'</span>, <span class="string">'有'</span>, <span class="string">'點'</span> ,<span class="string">','</span>]</span><br><span class="line"><span class="keyword">const</span> array2 = [<span class="string">'可'</span>, <span class="string">'黏'</span>, <span class="string">'阿'</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log([...array1, ...array2])</span><br><span class="line"><span class="comment">//['你', '有', '點', ',', '可', '黏', '阿']</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//========對照過去 ES5 方法==============</span></span><br><span class="line"><span class="comment">//使用 concat 合併陣列</span></span><br><span class="line"><span class="keyword">const</span> array1 = [<span class="string">'祝'</span>, <span class="string">'大'</span>,<span class="string">'家'</span> ,<span class="string">','</span>]</span><br><span class="line"><span class="keyword">const</span> array2 = [<span class="string">'發'</span>, <span class="string">'大'</span>,<span class="string">'財'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ARR = array1.concat(array2);</span><br><span class="line"><span class="built_in">console</span>.log(ARR); <span class="comment">// ["祝", "大", "家", ",", "發", "大", "財"]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="c-轉換"><a href="#c-轉換" class="headerlink" title="c. 轉換"></a>c. 轉換</h3><ul><li><font color="#f00">可迭代</font> (iterable) 轉換成陣列 (array)，可迭代物件包括 String、Array、TypedArray、Map 與 Set 物件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 將字串轉換成陣列</span></span><br><span class="line"><span class="keyword">const</span> str = <span class="string">'ptt'</span></span><br><span class="line"><span class="keyword">const</span> strTran = [...str]; <span class="comment">// ["p", "t", "t"]</span></span><br></pre></td></tr></table></figure><ul><li><font color="#f00">類陣列</font>轉換成陣列</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>) <span class="comment">// Arguments(4)[1, 2, 3, 4, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray(<span class="built_in">arguments</span>)) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//轉為陣列</span></span><br><span class="line">  <span class="keyword">const</span> arr = [...arguments] </span><br><span class="line">  <span class="built_in">console</span>.log(arr) <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray(arr)) <span class="comment">// true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><h3 id="d-淺層拷貝"><a href="#d-淺層拷貝" class="headerlink" title="d. 淺層拷貝"></a>d. 淺層拷貝</h3><p>陣列及物件都有傳參考的特性，當把他們賦予一個新的變數時，修改新的變數的值時，原陣列或物件也會被修改到</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = [<span class="string">'Vicky'</span>, <span class="string">'Eric'</span>, <span class="string">'Pai'</span>]</span><br><span class="line"><span class="keyword">const</span> nameNew = name;</span><br><span class="line">nameNew.push(<span class="string">'小黑'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name); <span class="comment">//["Vicky", "Eric", "Pai", "小黑"]</span></span><br><span class="line"><span class="built_in">console</span>.log(nameNew); <span class="comment">//["Vicky", "Eric", "Pai", "小黑"]</span></span><br></pre></td></tr></table></figure><p>展開運算子有淺層拷貝的特性，因此使用展開後，原陣列就不會被修改到了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = [<span class="string">'Vicky'</span>, <span class="string">'Eric'</span>, <span class="string">'Pai'</span>]</span><br><span class="line"><span class="keyword">const</span> nameNew = [...name];</span><br><span class="line">nameNew.push(<span class="string">'小黑'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name); <span class="comment">//["Vicky", "Eric", "Pai"]</span></span><br><span class="line"><span class="built_in">console</span>.log(nameNew); <span class="comment">//["Vicky", "Eric", "Pai", "小黑"]</span></span><br></pre></td></tr></table></figure><p><font color="#f00"><strong>But</strong></font>，因為是淺拷貝，所以當陣列裡面的值擺放的是物件的話，使用展開運算子後依然會被修改到</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = [&#123;<span class="attr">Vicky</span>: <span class="number">20</span>&#125;, &#123;<span class="attr">Eric</span>: <span class="number">25</span>&#125;, &#123;<span class="attr">Pai</span>: <span class="number">29</span>&#125;]</span><br><span class="line"><span class="keyword">const</span> nameNew = [...name];</span><br><span class="line">nameNew[<span class="number">0</span>].Vicky = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name); <span class="comment">//[&#123;Vicky: 30&#125;, &#123;Eric: 25&#125;, &#123;Pai: 29&#125;]</span></span><br><span class="line"><span class="built_in">console</span>.log(nameNew); <span class="comment">//[&#123;Vicky: 30&#125;, &#123;Eric: 25&#125;, &#123;Pai: 29&#125;]</span></span><br></pre></td></tr></table></figure><p>如果不想被修改到得使用深拷貝，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = [&#123;<span class="attr">Vicky</span>: <span class="number">20</span>&#125;, &#123;<span class="attr">Eric</span>: <span class="number">25</span>&#125;, &#123;<span class="attr">Pai</span>: <span class="number">29</span>&#125;]</span><br><span class="line"><span class="keyword">const</span> nameNew =<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(name))</span><br><span class="line">nameNew[<span class="number">0</span>].Vicky = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name); <span class="comment">//[&#123;Vicky: 30&#125;, &#123;Eric: 25&#125;, &#123;Pai: 29&#125;]</span></span><br><span class="line"><span class="built_in">console</span>.log(nameNew); <span class="comment">//[&#123;Vicky: 20&#125;, &#123;Eric: 25&#125;, &#123;Pai: 29&#125;]</span></span><br></pre></td></tr></table></figure><h1 id="二、其餘參數-Rest-Operator"><a href="#二、其餘參數-Rest-Operator" class="headerlink" title="二、其餘參數(Rest Operator)"></a>二、其餘參數(Rest Operator)</h1><p>有時傳進來的的參數不確定有多少，這時就可以使用其餘參數把不確定的參數變成陣列傳到函式</p><ul><li><p>單傳一個其餘參數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...numbers</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">  numbers.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">number</span>) </span>&#123;</span><br><span class="line">    result += number;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">1</span>)); <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)); <span class="comment">// 15</span></span><br></pre></td></tr></table></figure></li><li><p>其餘參數合併其他參數傳入<br>如果 function 的參數裡面有先定義好的參數，會照順序把數值放到參數裡面，其他的才放到其餘參數裡面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">restArray</span>(<span class="params">x, y, ...others</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"x"</span>,x);  <span class="comment">// x： 1</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"y"</span>,y);  <span class="comment">// y： 2</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"others"</span>,others);  <span class="comment">// others： [3, 4, 5]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">restArray(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="三、資料來源"><a href="#三、資料來源" class="headerlink" title="三、資料來源"></a>三、資料來源</h1><ul><li><a href="https://kanboo.github.io/2018/01/26/ES6-SpreadOperator-RestOperator/" target="_blank" rel="noopener">ES6-展開運算子(Spread Operator)、其餘參數(Rest Operator)</a></li><li><a href="https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part4/rest_spread.html" target="_blank" rel="noopener">從ES6開始的JavaScript學習生活</a></li></ul><h1 id="四、關鍵字"><a href="#四、關鍵字" class="headerlink" title="四、關鍵字"></a>四、關鍵字</h1><p><a href="https://pjchender.github.io/2017/09/26/js-javascript-%E7%96%8A%E4%BB%A3%E5%99%A8%EF%BC%88iterator%EF%BC%89/" target="_blank" rel="noopener">可迭代</a>、深拷貝</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Vue 空氣品質 api 練習]</title>
      <link href="/Project/20200219/2184977571/"/>
      <url>/Project/20200219/2184977571/</url>
      
        <content type="html"><![CDATA[<h1 id="壹、作業目標"><a href="#壹、作業目標" class="headerlink" title="壹、作業目標"></a>壹、作業目標</h1><ul><li>將資料內容透過 “元件” 呈現</li><li>製作城市過濾選項</li><li>將外層的資料透過 Props 傳到內層</li><li>將內層資料透過 emit 傳遞到外層 (作為另一個關注城市的呈現)</li><li>依據不同污染呈現不同色彩</li><li>透過 localStorage 儲存上次關注的城市 <a id="more"></a></li></ul><hr><h1 id="貳、前言"><a href="#貳、前言" class="headerlink" title="貳、前言"></a>貳、前言</h1><p>這個作業算是第一個我以 Vue 完成的小專案，剛從原生 JS 轉換過來框架，有許多概念都滿模糊的。<br>所以一開始滿痛苦的，這個小專案也花了我兩天的時間。<br>附上<a href="https://codepen.io/PaiP/pen/LYVZvGO?fbclid=IwAR33Q45D0_bHV0TEYdiG7GWQlcEEy0yhalyxOtB5w5NyVvWaTvEbsmaaANY" target="_blank" rel="noopener"><strong>codepen</strong></a></p><hr><h1 id="參、程式發想流程"><a href="#參、程式發想流程" class="headerlink" title="參、程式發想流程"></a>參、程式發想流程</h1><hr><p>開發心得: 起頭還是要從最簡單的開始，難的事留到後面想，有時候前面的路鋪好了，後面難走的路也會變順。</p><h2 id="一、-使用撈出空汙-JSON-的資料呈現在畫面上。"><a href="#一、-使用撈出空汙-JSON-的資料呈現在畫面上。" class="headerlink" title="一、 使用撈出空汙 JSON 的資料呈現在畫面上。"></a>一、 使用撈出空汙 JSON 的資料呈現在畫面上。</h2><h2 id="二、-將各縣市的資料撈出來過濾，去除重複的縣市。"><a href="#二、-將各縣市的資料撈出來過濾，去除重複的縣市。" class="headerlink" title="二、 將各縣市的資料撈出來過濾，去除重複的縣市。"></a>二、 將各縣市的資料撈出來過濾，去除重複的縣市。</h2><h2 id="三、-選擇下拉式選單縣市，下方呈現出對應的縣市空污資料。"><a href="#三、-選擇下拉式選單縣市，下方呈現出對應的縣市空污資料。" class="headerlink" title="三、 選擇下拉式選單縣市，下方呈現出對應的縣市空污資料。"></a>三、 選擇下拉式選單縣市，下方呈現出對應的縣市空污資料。</h2><h2 id="四、-點選星號，可以將下方的資料新增到關注名單。而下方被點選的資料會消失。"><a href="#四、-點選星號，可以將下方的資料新增到關注名單。而下方被點選的資料會消失。" class="headerlink" title="四、 點選星號，可以將下方的資料新增到關注名單。而下方被點選的資料會消失。"></a>四、 點選星號，可以將下方的資料新增到關注名單。而下方被點選的資料會消失。</h2><h2 id="五、-點選上方關注資料的星號，那筆關注資料會被取消，回到下方的分類資料。"><a href="#五、-點選上方關注資料的星號，那筆關注資料會被取消，回到下方的分類資料。" class="headerlink" title="五、 點選上方關注資料的星號，那筆關注資料會被取消，回到下方的分類資料。"></a>五、 點選上方關注資料的星號，那筆關注資料會被取消，回到下方的分類資料。</h2><h2 id="六、-特定的空氣品質，給予對應的背景顏色。"><a href="#六、-特定的空氣品質，給予對應的背景顏色。" class="headerlink" title="六、 特定的空氣品質，給予對應的背景顏色。"></a>六、 特定的空氣品質，給予對應的背景顏色。</h2><h2 id="七、-將關注的資料儲存到-localStorage-裡，並且網頁下次打開，關注欄也會呈現最新的空污資訊。"><a href="#七、-將關注的資料儲存到-localStorage-裡，並且網頁下次打開，關注欄也會呈現最新的空污資訊。" class="headerlink" title="七、 將關注的資料儲存到 localStorage 裡，並且網頁下次打開，關注欄也會呈現最新的空污資訊。"></a>七、 將關注的資料儲存到 localStorage 裡，並且網頁下次打開，關注欄也會呈現最新的空污資訊。</h2><hr><h1 id="肆、程式撰寫細節"><a href="#肆、程式撰寫細節" class="headerlink" title="肆、程式撰寫細節"></a>肆、程式撰寫細節</h1><h2 id="一、-撈出空汙-JSON-的資料呈現在畫面上。"><a href="#一、-撈出空汙-JSON-的資料呈現在畫面上。" class="headerlink" title="一、 撈出空汙 JSON 的資料呈現在畫面上。"></a>一、 撈出空汙 JSON 的資料呈現在畫面上。</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-columns"</span>&gt;</span></span><br><span class="line">    // 使用 v-for 建議都綁定 :key，以防之後可能會使用到不被快速置換的標籤</span><br><span class="line">    // :pm-data="item" 綁定後，就會把 item 在 filterData 讀到的資料傳到 pm-data</span><br><span class="line">    <span class="tag">&lt;<span class="name">county-list</span> <span class="attr">v-for</span>=<span class="string">"(item,key) in filterData"</span> <span class="attr">:pm-data</span>=<span class="string">"item"</span> <span class="attr">:key</span>=<span class="string">"key"</span> @<span class="attr">star-click</span>=<span class="string">"toggleFocus"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">county-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//建立 x-template 模板</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-template"</span> <span class="attr">id</span>=<span class="string">"listTemplate"</span>&gt;</span></span><br><span class="line"><span class="javascript">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card"</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">"statusColor"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span><span class="template-variable">&#123;&#123; pmData.County &#125;&#125;</span><span class="xml"> - </span><span class="template-variable">&#123;&#123; pmData.SiteName &#125;&#125;</span></span></span><br><span class="line"><span class="javascript">      &lt;a href=<span class="string">"#"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"float-right"</span> @click.prevent=<span class="string">"staredCounty"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">          &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"far fa-star"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line"><span class="javascript">      &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"list-unstyled"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>AQI 指數: </span><span class="template-variable">&#123;&#123; pmData.AQI &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>PM 2.5: </span><span class="template-variable">&#123;&#123; pmData['PM2.5_AVG'] &#125;&#125;</span><span class="xml"> </span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// pmData['PM2.5_AVG'] 因為有特殊標點符號，要改成括號'[]' </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>說明: </span><span class="template-variable">&#123;&#123; pmData.Status &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123; pmData.PublishTime &#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">//使用 props 將外層資料傳到內層(x-template 裡面)</span></span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'county-list'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">  props:[<span class="string">'pmData'</span>],</span></span><br><span class="line"><span class="actionscript">  template: <span class="string">'#listTemplate'</span>,</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">'#app'</span>,</span></span><br><span class="line">    data: &#123;</span><br><span class="line">        filterData: [],</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    created: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> vm = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> api = <span class="string">'http://opendata2.epa.gov.tw/AQI.json'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 把 ajax 資料放到 filterData 裡面</span></span></span><br><span class="line"><span class="actionscript">        $.get(api).then(<span class="function"><span class="keyword">function</span><span class="params">( response )</span> </span>&#123;</span></span><br><span class="line">        vm.filterData = response;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、-將各縣市的資料撈出來過濾，去除重複的縣市。-1"><a href="#二、-將各縣市的資料撈出來過濾，去除重複的縣市。-1" class="headerlink" title="二、 將各縣市的資料撈出來過濾，去除重複的縣市。"></a>二、 將各縣市的資料撈出來過濾，去除重複的縣市。</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//擷取下拉式選單縣市資料</span></span><br><span class="line"><span class="keyword">let</span> locationArray = [];<span class="comment">// 創建出一個陣列，用來存放擷取出來的縣市</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ; i&lt;vm.data.length ; i++)&#123;</span><br><span class="line">    locationArray.push(vm.data[i].County);</span><br><span class="line">    <span class="comment">// 把全部縣市放到locationArray裡面</span></span><br><span class="line">&#125;</span><br><span class="line">vm.location = locationArray.filter(<span class="function"><span class="keyword">function</span>(<span class="params">element,index,array</span>)</span>&#123; </span><br><span class="line">    <span class="comment">//使用 filter 把重複的縣市過濾掉</span></span><br><span class="line">    <span class="keyword">return</span> array.indexOf(element) === index;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><a href="">過濾重複物件內重複值的方式(待補)</a></li></ul><h2 id="三、-選擇下拉式選單縣市，下方呈現出對應的縣市空污資料。-1"><a href="#三、-選擇下拉式選單縣市，下方呈現出對應的縣市空污資料。-1" class="headerlink" title="三、 選擇下拉式選單縣市，下方呈現出對應的縣市空污資料。"></a>三、 選擇下拉式選單縣市，下方呈現出對應的縣市空污資料。</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"form-control mb-3"</span> @<span class="attr">change</span>=<span class="string">"filterCounty"</span>&gt;</span></span><br><span class="line">    //當下拉式選單被選取時，觸發@change="filterCounty"</span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>--- 請選擇城市 ---<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">:value</span>=<span class="string">"item"</span> <span class="attr">v-for</span>=<span class="string">"(item,key) in location"</span> <span class="attr">:key</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="actionscript">    filterCounty: <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> vm = <span class="keyword">this</span>;</span></span><br><span class="line">      vm.filterData = [];</span><br><span class="line"><span class="javascript">      <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ; i&lt;vm.data.length ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(e.target.value == vm.data[i].County)&#123; <span class="comment">//當下拉式選單選取的縣市等於資料中的縣市時</span></span></span><br><span class="line">          vm.filter = e.target.value;</span><br><span class="line"><span class="actionscript">          vm.filterData.push(vm.data[i]); <span class="comment">//將資料中的縣市，加入到 filterData 裡面</span></span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、-點選星號，可以將下方的資料新增到關注名單。而下方被點選的資料會消失。-1"><a href="#四、-點選星號，可以將下方的資料新增到關注名單。而下方被點選的資料會消失。-1" class="headerlink" title="四、 點選星號，可以將下方的資料新增到關注名單。而下方被點選的資料會消失。"></a>四、 點選星號，可以將下方的資料新增到關注名單。而下方被點選的資料會消失。</h2><h2 id="五、-點選上方關注資料的星號，那筆關注資料會被取消，回到下方的分類資料。-1"><a href="#五、-點選上方關注資料的星號，那筆關注資料會被取消，回到下方的分類資料。-1" class="headerlink" title="五、 點選上方關注資料的星號，那筆關注資料會被取消，回到下方的分類資料。"></a>五、 點選上方關注資料的星號，那筆關注資料會被取消，回到下方的分類資料。</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>關注城市<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-columns"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">county-list</span> <span class="attr">v-for</span>=<span class="string">"(item,key) in stared"</span> <span class="attr">:pm-data</span>=<span class="string">"item"</span> <span class="attr">:key</span>=<span class="string">"key"</span> @<span class="attr">star-click</span>=<span class="string">"toggleFocus"</span>&gt;</span></span><br><span class="line">          // 3-1.staredCountystar-click 在這</span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-star"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">county-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 城市列表 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-columns"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 使用 v-for 建議都綁定 :key，以防之後可能會使用到不被快速置換的標籤 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- :pm-data="item" 綁定後，就會把 item 在 filterData 讀到的資料傳到 pm-data --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">county-list</span> <span class="attr">v-for</span>=<span class="string">"(item,key) in filterData"</span> <span class="attr">:pm-data</span>=<span class="string">"item"</span> <span class="attr">:key</span>=<span class="string">"key"</span> @<span class="attr">star-click</span>=<span class="string">"toggleFocus"</span>&gt;</span> </span><br><span class="line">          // 3-2.staredCountystar-click 在這，他會觸發外層的資料 toggleFocus</span><br><span class="line">      <span class="tag">&lt;/<span class="name">county-list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-template"</span> <span class="attr">id</span>=<span class="string">"listTemplate"</span>&gt;</span></span><br><span class="line"><span class="javascript">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card"</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">"statusColor"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span><span class="template-variable">&#123;&#123; pmData.County &#125;&#125;</span><span class="xml"> - </span><span class="template-variable">&#123;&#123; pmData.SiteName &#125;&#125;</span></span></span><br><span class="line"><span class="javascript">      &lt;a href=<span class="string">"#"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"float-right"</span> @click.prevent=<span class="string">"staredCounty"</span>&gt; <span class="comment">// 2.staredCounty 在這!!</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">          &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"far fa-star"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line"><span class="javascript">      &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"list-unstyled"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>AQI 指數: </span><span class="template-variable">&#123;&#123; pmData.AQI &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>PM 2.5: </span><span class="template-variable">&#123;&#123; pmData['PM2.5_AVG'] &#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>說明: </span><span class="template-variable">&#123;&#123; pmData.Status &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123; pmData.PublishTime &#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'county-list'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">  props:[<span class="string">'pmData'</span>], </span></span><br><span class="line"><span class="actionscript">  template: <span class="string">'#listTemplate'</span>,</span></span><br><span class="line">  methods:&#123;</span><br><span class="line"><span class="actionscript">    staredCounty: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$emit(<span class="string">'star-click'</span>,<span class="keyword">this</span>.pmData); </span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 1. staredCounty 使用 emit 觸發 star-click 外層的資料，同時將 pmData 的資料傳出去</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="actionscript">    <span class="comment">//**這邊的 toggleFocus 給加上關注還有取消關注同時使用</span></span></span><br><span class="line"><span class="actionscript">    toggleFocus: <span class="function"><span class="keyword">function</span><span class="params">(focusList)</span></span>&#123; <span class="comment">// 4. focusList 接收到的資料就是來自 (1.) 的 pmData </span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> vm = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 5.先去搜尋關注名單裡面有沒有這筆資料</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(vm.stared.indexOf(focusList) == <span class="number">-1</span>)&#123; <span class="comment">//6. 沒有，加入</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.stared.push(focusList);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.filterData.splice(<span class="keyword">this</span>.filterData.indexOf(focusList), <span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">         <span class="comment">//7.將資料加入關注名單的同時，要將非關注的資料移除</span></span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(vm.stared.indexOf(focusList) != <span class="number">-1</span>)&#123; <span class="comment">//8. 有，移除</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.stared.splice(<span class="keyword">this</span>.stared.indexOf(focusList), <span class="number">1</span>);</span></span><br><span class="line">        if(focusList.County == vm.filter)&#123;  </span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.filterData.push(focusList);</span></span><br><span class="line"><span class="actionscript">        &#125;<span class="comment">//9.注意，移除時，要是在同一個縣市的資料才能 push 進去，不然就會發生你頁面在台中市，</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//當你點選取消苗栗縣的關注時，苗栗的這筆資料就會加到台中的非關注頁面</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、-特定的空氣品質，給予對應的背景顏色。-1"><a href="#六、-特定的空氣品質，給予對應的背景顏色。-1" class="headerlink" title="六、 特定的空氣品質，給予對應的背景顏色。"></a>六、 特定的空氣品質，給予對應的背景顏色。</h2><p>這個我放在 component 裡面直接處理掉，因為它屬於內層的資料</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-template"</span> <span class="attr">id</span>=<span class="string">"listTemplate"</span>&gt;</span></span><br><span class="line"><span class="javascript">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card"</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">"statusColor"</span>&gt;<span class="comment">// 1.這邊動態加上 class 的狀態</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span><span class="template-variable">&#123;&#123; pmData.County &#125;&#125;</span><span class="xml"> - </span><span class="template-variable">&#123;&#123; pmData.SiteName &#125;&#125;</span></span></span><br><span class="line"><span class="javascript">      &lt;a href=<span class="string">"#"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"float-right"</span> @click.prevent=<span class="string">"staredCounty"</span>&gt; <span class="comment">// 2.staredCounty 在這!!</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">          &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"far fa-star"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line"><span class="javascript">      &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"list-unstyled"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>AQI 指數: </span><span class="template-variable">&#123;&#123; pmData.AQI &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>PM 2.5: </span><span class="template-variable">&#123;&#123; pmData['PM2.5_AVG'] &#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>說明: </span><span class="template-variable">&#123;&#123; pmData.Status &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123; pmData.PublishTime &#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'county-list'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">  props:[<span class="string">'pmData'</span>], </span></span><br><span class="line"><span class="actionscript">  template: <span class="string">'#listTemplate'</span>,</span></span><br><span class="line">  methods:&#123;</span><br><span class="line"><span class="actionscript">    staredCounty: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$emit(<span class="string">'star-click'</span>,<span class="keyword">this</span>.pmData);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line"><span class="actionscript">    <span class="comment">//2. 宣告兩個陣列 level、cssColor</span></span></span><br><span class="line"><span class="actionscript">    statusColor: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> level = [<span class="string">'良好'</span>,<span class="string">'普通'</span>,<span class="string">'對敏感族群不健康'</span>,<span class="string">'對所有族群不健康'</span>,<span class="string">'非常不健康'</span>,<span class="string">'危害'</span>]</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> cssColor = [<span class="string">''</span>,<span class="string">'status-aqi2'</span>,<span class="string">'status-aqi3'</span>,<span class="string">'status-aqi4'</span>,<span class="string">'status-aqi5'</span>,<span class="string">'status-aqi6'</span>]</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> cssColor[level.indexOf(<span class="keyword">this</span>.pmData.Status)]; </span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 3. 使用 indexOf 去找到資料的狀態，對應 level 的 index，去選擇要對應哪一個顏色</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="七、-將關注的資料儲存到-localStorage-裡，並且網頁下次打開，關注欄也會呈現最新的空污資訊。-1"><a href="#七、-將關注的資料儲存到-localStorage-裡，並且網頁下次打開，關注欄也會呈現最新的空污資訊。-1" class="headerlink" title="七、 將關注的資料儲存到 localStorage 裡，並且網頁下次打開，關注欄也會呈現最新的空污資訊。"></a>七、 將關注的資料儲存到 localStorage 裡，並且網頁下次打開，關注欄也會呈現最新的空污資訊。</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    data: [],</span><br><span class="line">    filterData: [],</span><br><span class="line">    location: [],</span><br><span class="line">    stared: [],</span><br><span class="line">    filter: <span class="string">''</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    filterCounty: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">const</span> vm = <span class="keyword">this</span>;</span><br><span class="line">      vm.filterData = [];</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ; i&lt;vm.data.length ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(e.target.value == vm.data[i].County)&#123;</span><br><span class="line">          vm.filter = e.target.value;</span><br><span class="line">          vm.filterData.push(vm.data[i]);</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//4-2. 切換城市時，會將所有這個名稱的城市放到下方未關注的欄位，不管這個城市是否被選取了，</span></span><br><span class="line">      <span class="comment">//這時又得把這個程式寫一次，過濾掉已經被關注的資料</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ; i&lt;localStorage.length ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;vm.filterData.length;j++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(vm.filterData[j].SiteId == <span class="built_in">JSON</span>.parse(localStorage.getItem(localStorage.key(i))).SiteId)&#123;</span><br><span class="line">            vm.filterData.splice(vm.filterData.indexOf(vm.filterData[j]),<span class="number">1</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    toggleFocus: <span class="function"><span class="keyword">function</span>(<span class="params">focusList</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">const</span> vm = <span class="keyword">this</span>;</span><br><span class="line">     </span><br><span class="line">      <span class="keyword">if</span>(vm.stared.indexOf(focusList) == <span class="number">-1</span>)&#123; </span><br><span class="line">        <span class="keyword">this</span>.stared.push(focusList);</span><br><span class="line">        <span class="keyword">this</span>.filterData.splice(<span class="keyword">this</span>.filterData.indexOf(focusList), <span class="number">1</span>);</span><br><span class="line">        localStorage.setItem(focusList.SiteId,<span class="built_in">JSON</span>.stringify(focusList)); </span><br><span class="line">        <span class="comment">//1. 當加入關注名單時，也將這份名單存到 localStorage，這邊使用的 Key 是此筆資料的 ID，這樣能保有唯一性</span></span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(vm.stared.indexOf(focusList) != <span class="number">-1</span>)&#123; </span><br><span class="line">        <span class="keyword">if</span>(focusList.County == vm.filter)&#123;  </span><br><span class="line">          <span class="keyword">this</span>.filterData.push(focusList);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.stared.splice(<span class="keyword">this</span>.stared.indexOf(focusList), <span class="number">1</span>);</span><br><span class="line">        localStorage.removeItem(focusList.SiteId); </span><br><span class="line">        <span class="comment">// 2. 當取消關注名單時，就將這筆 localStorage 的資料刪除</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> vm = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> api = <span class="string">'http://opendata2.epa.gov.tw/AQI.json'</span>;</span><br><span class="line"></span><br><span class="line">    $.<span class="keyword">get</span>(api).then(function( response ) &#123;</span><br><span class="line">      vm.filterData = response;</span><br><span class="line">      vm.data = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(response)); </span><br><span class="line">      </span><br><span class="line">      <span class="comment">//4-1. 每次 AJAX 取資料的時候都會取全部的資料，但重新整理後，已經被標記的資料，不能出現在非關注的城市資料中</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ; i&lt;localStorage.length ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;vm.filterData.length;j++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(vm.filterData[j].SiteId == <span class="built_in">JSON</span>.parse(localStorage.getItem(localStorage.key(i))).SiteId)&#123;</span><br><span class="line">            vm.filterData.splice(vm.filterData.indexOf(vm.filterData[j]),<span class="number">1</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">      <span class="comment">//5.localStorage 同步更新的功能，因為儲存到 localStorage 裡面的資料不會改變，</span></span><br><span class="line">      <span class="comment">//因此，這段程式在每次重新整理的時候，會檢視 localStorage 裡面有什麼資料，他會再去讀取一次 AJAX 上的資料覆蓋上去</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ; i&lt;localStorage.length ; i++)&#123;</span><br><span class="line">        <span class="keyword">let</span> updateId = <span class="built_in">JSON</span>.parse(localStorage.getItem(localStorage.key(i))).SiteId;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j = <span class="number">0</span> ; j&lt;vm.data.length ; j++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(vm.data[j].SiteId == updateId)&#123;</span><br><span class="line">            localStorage.setItem ( vm.data[j].SiteId , <span class="built_in">JSON</span>.stringify(vm.data[j]) );</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="keyword">const</span> vm = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ; i&lt;localStorage.length ; i++)&#123;</span><br><span class="line">      vm.stared.push(<span class="built_in">JSON</span>.parse(localStorage.getItem(localStorage.key(i)))); <span class="comment">//重新整理後 push localStorage 的資料</span></span><br><span class="line">    &#125;<span class="comment">//3. 在重新整理後，要將儲存在 localStorage 的資料渲染到畫面上</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="八、bug-修正"><a href="#八、bug-修正" class="headerlink" title="八、bug 修正"></a>八、bug 修正</h2><ul><li>當全部的縣市裡全部的資料都被關注的時候，這時下拉式選單中的這個縣市會消失。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> vm = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> api = <span class="string">'http://opendata2.epa.gov.tw/AQI.json'</span>;</span><br><span class="line"></span><br><span class="line">    $.<span class="keyword">get</span>(api).then(function( response ) &#123;</span><br><span class="line">      vm.filterData = response;</span><br><span class="line">      <span class="comment">//使用物件深拷貝，拷貝一份新的物件，這樣就不會有物件傳參考的問題，</span></span><br><span class="line">      <span class="comment">//如果不拷貝一份物件，當南投區域全部被打星號，跑到關注時，下次重新整理，下拉式選單的南投就會不見</span></span><br><span class="line">      vm.data = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(response)); </span><br><span class="line"></span><br><span class="line">      <span class="comment">//擷取下拉式選單縣市資料，這時的 data 就獨立出來一個陣列，和 response 資料就不會有物件傳參考的問題。</span></span><br><span class="line">      <span class="keyword">let</span> locationArray = [];</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ; i&lt;vm.data.length ; i++)&#123;</span><br><span class="line">        locationArray.push(vm.data[i].County);</span><br><span class="line">      &#125;</span><br><span class="line">      vm.location = locationArray.filter(<span class="function"><span class="keyword">function</span>(<span class="params">element,index,array</span>)</span>&#123; </span><br><span class="line">          <span class="comment">//原本我直接用 indexOf(response.County),但 indexOf 不能用在物件裡面的值。</span></span><br><span class="line">        <span class="keyword">return</span> array.indexOf(element) === index;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 刷題篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷題 </tag>
            
            <tag> Vue 課程作業 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[全台黑客松-口罩地圖]</title>
      <link href="/Project/20200219/4253087110/"/>
      <url>/Project/20200219/4253087110/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-leaflet-OSM-實作口罩地圖"><a href="#使用-leaflet-OSM-實作口罩地圖" class="headerlink" title="使用 leaflet + OSM 實作口罩地圖"></a>使用 leaflet + OSM 實作口罩地圖</h1><h2 id="一、-leaflet-基礎使用"><a href="#一、-leaflet-基礎使用" class="headerlink" title="一、 leaflet 基礎使用"></a>一、 leaflet 基礎使用</h2><p><a href="https://leafletjs.com/" target="_blank" rel="noopener">leaflet網站</a></p><a id="more"></a><h3 id="1-載入-Css-及-JavaScript"><a href="#1-載入-Css-及-JavaScript" class="headerlink" title="1.載入 Css 及 JavaScript"></a>1.載入 Css 及 JavaScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;leaflet@1.6.0&#x2F;dist&#x2F;leaflet.css&quot; &gt;</span><br><span class="line">&lt;!-- Make sure you put this AFTER Leaflet&#39;s CSS --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;leaflet@1.6.0&#x2F;dist&#x2F;leaflet.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-Html-綁定-id"><a href="#2-Html-綁定-id" class="headerlink" title="2. Html 綁定 id"></a>2. Html 綁定 id</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;map&quot;&gt;&lt;div&gt;</span><br></pre></td></tr></table></figure><h3 id="3-CSS-設定寬高"><a href="#3-CSS-設定寬高" class="headerlink" title="3. CSS 設定寬高"></a>3. CSS 設定寬高</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">html,body&#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">#map &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-JaveScript-語法設定"><a href="#4-JaveScript-語法設定" class="headerlink" title="4. JaveScript 語法設定"></a>4. JaveScript 語法設定</h3><ul><li>設定地圖的中心位置及縮放比例<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var map &#x3D; L.map(&#39;map&#39;).setView([22.604799,120.2976256</span><br><span class="line">], 13);</span><br><span class="line">&#x2F;&#x2F;L.map(&#39;(綁定id)&#39;).setView([經緯度],縮放比例)</span><br></pre></td></tr></table></figure></li><li>設定使用的地圖，這邊使用的是OSM<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">L.tileLayer(&#39;https:&#x2F;&#x2F;&#123;s&#125;.tile.openstreetmap.org&#x2F;&#123;z&#125;&#x2F;&#123;x&#125;&#x2F;&#123;y&#125;.png&#39;, &#123;</span><br><span class="line">attribution: &#39;&amp;copy; &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.openstreetmap.org&#x2F;copyright&quot;&gt;OpenStreetMap&lt;&#x2F;a&gt; contributors&#39;</span><br><span class="line">&#125;).addTo(map);</span><br></pre></td></tr></table></figure></li><li>在地圖上加上標籤<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var marker &#x3D; L.marker([51.5, -0.09]).addTo(mymap);</span><br></pre></td></tr></table></figure></li><li>在地圖上加上範圍<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 多邊形</span><br><span class="line">var polygon &#x3D; L.polygon([</span><br><span class="line">[23.956052,120.685992],</span><br><span class="line">[23.976052,120.665992],</span><br><span class="line">[23.936052,120.655992]</span><br><span class="line">]).addTo(map);</span><br><span class="line">&#x2F;&#x2F; 圓形</span><br><span class="line">var circle &#x3D; L.circle([23.976052,120.685992], &#123;</span><br><span class="line">color: &#39;red&#39;,</span><br><span class="line">fillColor: &#39;#f03&#39;,</span><br><span class="line">fillOpacity: 0.5,</span><br><span class="line">radius: 500</span><br><span class="line">&#125;).addTo(map);</span><br></pre></td></tr></table></figure></li><li>為範圍及標示加上註解<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">marker.bindPopup(&quot;&lt;b&gt;Hello world!&lt;&#x2F;b&gt;&lt;br&gt;I am a popup.&quot;).openPopup(); </span><br><span class="line">circle.bindPopup(&quot;I am a circle.&quot;); </span><br><span class="line">polygon.bindPopup(&quot;I am a polygon.&quot;);</span><br></pre></td></tr></table></figure><h2 id="二、改變標示座標的顏色"><a href="#二、改變標示座標的顏色" class="headerlink" title="二、改變標示座標的顏色"></a>二、改變標示座標的顏色</h2></li><li>插入外部設計者的標籤<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var greenIcon &#x3D; new L.Icon(&#123;</span><br><span class="line">  iconUrl: &#39;https:&#x2F;&#x2F;cdn.rawgit.com&#x2F;pointhi&#x2F;leaflet-color-markers&#x2F;master&#x2F;img&#x2F;marker-icon-2x-green.png&#39;,</span><br><span class="line">  shadowUrl: &#39;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;leaflet&#x2F;0.7.7&#x2F;images&#x2F;marker-shadow.png&#39;,</span><br><span class="line">  iconSize: [25, 41],</span><br><span class="line">  iconAnchor: [12, 41],</span><br><span class="line">  popupAnchor: [1, -34],</span><br><span class="line">  shadowSize: [41, 41]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">L.marker([51.5, -0.09], &#123;icon: greenIcon&#125;).addTo(map);</span><br></pre></td></tr></table></figure><h2 id="三、-加入多個地標"><a href="#三、-加入多個地標" class="headerlink" title="三、 加入多個地標"></a>三、 加入多個地標</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var data &#x3D; [</span><br><span class="line">  &#123;&#39;name&#39;:&#39;愛荔枝樂園&#39;,lat:24.0053725,lng:120.6275244&#125;,</span><br><span class="line">  &#123;&#39;name&#39;:&#39;黃金風鈴木&#39;,lat:24.0057594,lng:120.6290734&#125;</span><br><span class="line">]</span><br><span class="line">for(let i &#x3D;0;data.length&gt;i;i++)&#123;</span><br><span class="line">  L.marker([data[i].lat,data[i].lng], &#123;icon:       </span><br><span class="line">  greenIcon&#125;).addTo(map).bindPopup(&#39;&lt;h1&gt;&#39;+ data[i].name +&#39;&lt;&#x2F;p&gt;&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、-使用-MarkerClusterGroup-增加效能"><a href="#四、-使用-MarkerClusterGroup-增加效能" class="headerlink" title="四、 使用 MarkerClusterGroup 增加效能"></a>四、 使用 MarkerClusterGroup 增加效能</h2>為了不讓六千多筆資料一次顯示，使用 MarkerClusterGroup 將資料變成範圍性的數字，使用者有需要再去點開想看的區域。<br><a href="https://github.com/Leaflet/Leaflet.markercluster" target="_blank" rel="noopener">MarkerClusterGroup連結</a><h3 id="1-加入CDN"><a href="#1-加入CDN" class="headerlink" title="1. 加入CDN"></a>1. 加入CDN</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;CSS</span><br><span class="line">&lt;link href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;leaflet.markercluster@1.4.1&#x2F;dist&#x2F;MarkerCluster.css&quot;&gt;&lt;&#x2F;link&gt;</span><br><span class="line">&lt;link href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;leaflet.markercluster@1.4.1&#x2F;dist&#x2F;MarkerCluster.Default.css&quot;&gt;&lt;&#x2F;link&gt;</span><br><span class="line">&#x2F;&#x2F;JS</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;leaflet.markercluster@1.4.1&#x2F;dist&#x2F;leaflet.markercluster.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-建立-L-MarkerClusterGroup-的圖層"><a href="#2-建立-L-MarkerClusterGroup-的圖層" class="headerlink" title="2. 建立 L.MarkerClusterGroup() 的圖層"></a>2. 建立 L.MarkerClusterGroup() 的圖層</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var data &#x3D; [</span><br><span class="line">&#123;&#39;name&#39;:&#39;愛荔枝樂園&#39;,lat:24.0053725,lng:120.6275244&#125;,</span><br><span class="line">&#123;&#39;name&#39;:&#39;黃金風鈴木&#39;,lat:24.0057594,lng:120.6290734&#125;</span><br><span class="line">]</span><br><span class="line">var markers &#x3D; new L.MarkerClusterGroup();</span><br><span class="line">for(let i &#x3D;0;data.length&gt;i;i++)&#123;</span><br><span class="line">markers.addLayer(L.marker([data[i].lat,data[i].lng], &#123;icon: greenIcon&#125;)); &#x2F;&#x2F;將 L.mark(地標) 的圖層放到 makers 上面</span><br><span class="line">&#125;</span><br><span class="line">map.addLayer(markers); &#x2F;&#x2F;將 markers 放到 map 的圖層上</span><br></pre></td></tr></table></figure></li><li>所以這邊的圖層會變成:</li><li> - - - - - -<br>L.mark(地標) 上</li><li> - - - - - -<br>markers 中</li><li> - - - - - -<br>map 下</li><li> - - - - - -</li></ul><h2 id="五、-使用-AJAX-串接資料"><a href="#五、-使用-AJAX-串接資料" class="headerlink" title="五、 使用 AJAX 串接資料"></a>五、 使用 AJAX 串接資料</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var xhr &#x3D; new XMLHttpRequest();</span><br><span class="line">&#x2F;&#x2F;開啟一個XML的網路請求</span><br><span class="line">xhr.open(&quot;get&quot;,&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kiang&#x2F;pharmacies&#x2F;master&#x2F;json&#x2F;points.json&quot;);</span><br><span class="line">跟網址上的伺服器要資料</span><br><span class="line">xhr.send();</span><br><span class="line">&#x2F;&#x2F;執行要資料的動作</span><br><span class="line">xhr.onload &#x3D; function()&#123;</span><br><span class="line">&#x2F;&#x2F;當資料回傳完後，下面的函式會觸發</span><br><span class="line">var data &#x3D; JSON.parse(xhr.responseText).features;</span><br><span class="line">&#x2F;&#x2F;將得到的資料轉換成物件的格式</span><br><span class="line">for(let i &#x3D;0;data.length&gt;i;i++)&#123;</span><br><span class="line">markers.addLayer(L.marker([data[i].geometry.coordinates[1],data[i].geometry.coordinates[0]], &#123;icon: greenIcon &#125;).bindPopup(&#39;&lt;h1&gt;&#39;+data[i].properties.name+&#39;&lt;&#x2F;h1&gt;&#39;+&#39;&lt;p&gt;成人口罩數量&#39;+data[i].properties.mask_adult+&#39;&lt;&#x2F;p&gt;&#39;));</span><br><span class="line">&#125;;</span><br><span class="line">map.addLayer(markers);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、-使用-HTML5-Geolocation-來辨識目前位置"><a href="#六、-使用-HTML5-Geolocation-來辨識目前位置" class="headerlink" title="六、 使用 HTML5 Geolocation 來辨識目前位置"></a>六、 使用 HTML5 Geolocation 來辨識目前位置</h2><h3 id="1-先判斷目前瀏覽器支不支援定位功能"><a href="#1-先判斷目前瀏覽器支不支援定位功能" class="headerlink" title="1.先判斷目前瀏覽器支不支援定位功能"></a>1.先判斷目前瀏覽器支不支援定位功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (navigator.geolocation) &#123;</span><br><span class="line">navigator.geolocation.getCurrentPosition(showPosition, showError);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">alert(&quot;您的瀏覽器不支援定位系統&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-沒有-error-code-就呼叫-showPosition"><a href="#2-沒有-error-code-就呼叫-showPosition" class="headerlink" title="2. 沒有 error.code 就呼叫 showPosition()"></a>2. 沒有 error.code 就呼叫 showPosition()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function showPosition(position)&#123;</span><br><span class="line">let map &#x3D;       </span><br><span class="line"> L.map(&#39;map&#39;).setView([position.coords.latitude,position.coords.long</span><br><span class="line"> itude], position.zoom || 15);</span><br><span class="line">:</span><br><span class="line">:</span><br><span class="line">:</span><br><span class="line">:</span><br><span class="line"> 要執行的程式碼</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-有-error-code-就呼叫-showError"><a href="#3-有-error-code-就呼叫-showError" class="headerlink" title="3. 有 error.code 就呼叫 showError()"></a>3. 有 error.code 就呼叫 showError()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">function showError(error)&#123;</span><br><span class="line">let position &#x3D; &#123; &#x2F;&#x2F;做一筆資料讓讀取不到目前位置時使用</span><br><span class="line">  coords: &#123;</span><br><span class="line">    latitude: &#39;23.8523405&#39;,</span><br><span class="line">    longitude: &#39;120.9009427&#39;,</span><br><span class="line">  &#125;,</span><br><span class="line">  zoom: 7, &#x2F;&#x2F;讀取不到位置時縮放的範圍</span><br><span class="line">&#125;</span><br><span class="line">switch(error.code) &#123;</span><br><span class="line">  case error.PERMISSION_DENIED:</span><br><span class="line">    alert(&quot;讀取不到您目前的位置&quot;);</span><br><span class="line">    showPosition(position);</span><br><span class="line">    break;</span><br><span class="line">  case error.POSITION_UNAVAILABLE:</span><br><span class="line">    alert(&quot;讀取不到您目前的位置&quot;);</span><br><span class="line">    showPosition(position);</span><br><span class="line">    break;</span><br><span class="line">  case error.TIMEOUT:</span><br><span class="line">    alert(&quot;讀取位置逾時&quot;);</span><br><span class="line">    showPosition(position);</span><br><span class="line">    break;</span><br><span class="line">  case error.UNKNOWN_ERROR:</span><br><span class="line">    alert(&quot;Error&quot;);</span><br><span class="line">    showPosition(position);</span><br><span class="line">    break;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、按下回到目前位置按鈕"><a href="#七、按下回到目前位置按鈕" class="headerlink" title="七、按下回到目前位置按鈕"></a>七、按下回到目前位置按鈕</h2><ul><li>這段程式要放在 showPosition 的函式中，在執行 navigator.geolocation 後，目前位置的座標會存在這個函式中。<br>在使用一次 setView 找回中心點。<br>我有看到其他人是使用 map.panTo()，但是當我加上 map.setZoom時，發現他只能一次執行一個動作，他都得第一次把地圖放大後，第二次點才能去回到目前位置。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let goBackPosition &#x3D; document.querySelector(&#39;.js-goBackPosition&#39;);</span><br><span class="line">goBackPosition.addEventListener(&#39;click&#39;,function()&#123;</span><br><span class="line">  map.setView([position.coords.latitude,position.coords.longitude],   </span><br><span class="line">  position.zoom || 17);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h2 id="八、日期往後推七天"><a href="#八、日期往後推七天" class="headerlink" title="八、日期往後推七天"></a>八、日期往後推七天</h2><p>由於「this」即是指定的時間物件，因此就使用 this 取得「日」再加 7 天，最後將這個更新後的日期設定給這個時間物件即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Date.prototype.addDays &#x3D; function(days) &#123;</span><br><span class="line">this.setDate(this.getDate() + days);</span><br><span class="line">return this;</span><br><span class="line">&#125;</span><br><span class="line">let nextDay &#x3D; dt.addDays(7);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷題篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷題 </tag>
            
            <tag> 口罩地圖 </tag>
            
            <tag> 武漢肺炎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[js 地下層 3F - 計算機]</title>
      <link href="/Project/20200219/35964132/"/>
      <url>/Project/20200219/35964132/</url>
      
        <content type="html"><![CDATA[<h1 id="JS地下城-3F-計算機"><a href="#JS地下城-3F-計算機" class="headerlink" title="JS地下城 3F 計算機"></a>JS地下城 3F 計算機</h1><h2 id="UI設計稿"><a href="#UI設計稿" class="headerlink" title="UI設計稿"></a>UI設計稿</h2><p><img src="https://cdn-images-1.medium.com/max/1200/1*L_ru2LcfKa4GYrnNWEGL2g.png" alt="Ima"></p><p>在做這個作業前，可以先把計算機上的按鈕做分類，哪些按鈕按下是要幹嘛的，另外就是一些使用上的順序，方不方便，我是開啟 windows 的計算機看他是怎麼設計的。</p><a id="more"></a><h2 id="一、分類"><a href="#一、分類" class="headerlink" title="一、分類"></a>一、分類</h2><h3 id="1-數字-0-不能出現在小數點前重複出現，不然會出現，像-000-1"><a href="#1-數字-0-不能出現在小數點前重複出現，不然會出現，像-000-1" class="headerlink" title="1. 數字 : 0 不能出現在小數點前重複出現，不然會出現，像 000.1"></a>1. 數字 : 0 不能出現在小數點前重複出現，不然會出現，像 000.1</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> calResultStr == <span class="string">''</span> &amp;&amp; buffer == <span class="string">'00'</span> || calResultStr == <span class="string">'0'</span> &amp;&amp; buffer == <span class="string">'00'</span>: </span><br><span class="line"><span class="comment">//如果下排為空且輸入的數值是 00 或下排為 0 且輸入的數值是 00，那下排只能出現 0</span></span><br><span class="line">calResultStr = <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> calResultStr.indexOf(<span class="string">'0'</span>) == <span class="number">0</span> &amp;&amp; <span class="built_in">isNaN</span>(<span class="built_in">parseInt</span>(buffer)+<span class="number">1</span>) == <span class="literal">false</span>:</span><br><span class="line"><span class="comment">//如果下排 0 在第一個位置且後面輸入的數值為數字，就用後面輸入的數字取代 0</span></span><br><span class="line">calResultStr = buffer;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h3 id="2-運算符號-−-×÷-運算符號，不得重複，像-1×÷2"><a href="#2-運算符號-−-×÷-運算符號，不得重複，像-1×÷2" class="headerlink" title="2. 運算符號+ − ×÷ : 運算符號，不得重複，像:1×÷2="></a>2. 運算符號+ − ×÷ : 運算符號，不得重複，像:1×÷2=</h3><p>isNaN(parseInt(calContentStr.charAt(calContentStr.length-1))+1)</p><p>使用 charAt 去找 calContentStr 字串的最後一個字元，將這個字元轉換成數字後再 +1，判斷它是不是 NaN。如果是 NaN 代表他不是數字不能做算數。<br>calContentStr.substring(0,calContentStr.length-1)</p><p>將 calContentStr 字串的最後一個字元刪除。<br>case buffer == ‘+’: //在按下按鈕得到的值是 +-x÷ 的情況下<br>case buffer == ‘-‘:<br>case buffer == ‘×’:<br>case buffer == ‘÷’:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">calContentStr += calResultStr; <span class="comment">//按下加減乘除後，才把結果欄的值丟到運算欄</span></span><br><span class="line">calResultStr = <span class="string">''</span>; <span class="comment">//然後把結果欄清空</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果上排calContentStr最後一個字元是'+-×÷'，而且輸入的值也是'+-×÷'，就用輸入的值取代最後一個字元</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isNaN</span>(<span class="built_in">parseInt</span>(calContentStr.charAt(calContentStr.length<span class="number">-1</span>))+<span class="number">1</span>) == <span class="literal">true</span>)&#123;</span><br><span class="line"><span class="comment">//如果運算列的最後一個字元不是數字時</span></span><br><span class="line">calContentStr = calContentStr.substring(<span class="number">0</span>,calContentStr.length<span class="number">-1</span>);</span><br><span class="line"><span class="comment">//將最後運算列的最後一個字元刪除</span></span><br><span class="line">calContentStr += buffer;</span><br><span class="line"><span class="comment">//新增案件按下的運算符號</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">calContentStr = calContentStr + buffer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//完成這個case後，跳出這個switch</span></span><br></pre></td></tr></table></figure><h3 id="3-等號-eval-得到運算結果"><a href="#3-等號-eval-得到運算結果" class="headerlink" title="3. 等號 = : eval 得到運算結果"></a>3. 等號 = : eval 得到運算結果</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> buffer == <span class="string">'='</span>: <span class="comment">//如果按下按鈕得到的值是'='</span></span><br><span class="line">calContentStr += calResultStr; <span class="comment">//把下排的值丟到上排</span></span><br><span class="line">calContentStr += buffer; <span class="comment">//讓運算列加入'='，方便之後判斷用</span></span><br><span class="line"><span class="keyword">let</span> calResultContent = calContentStr.replace(<span class="regexp">/×/ig</span>, <span class="string">"*"</span>); <span class="comment">//將this取到的x÷替換成可以運算的符號</span></span><br><span class="line">calResultContent = calResultContent.replace(<span class="regexp">/÷/ig</span>, <span class="string">"/"</span>);</span><br><span class="line">calResultContent = calResultContent.substring(<span class="number">0</span>,calResultContent.length<span class="number">-1</span>); <span class="comment">//進行eval計算前記得把'='拿掉</span></span><br><span class="line">calResultStr = <span class="built_in">parseFloat</span>(<span class="built_in">eval</span>(calResultContent).toFixed(<span class="number">10</span>));<span class="comment">//因為 JS 運算是依循 IEEE754 的規範，在運算時會轉換成 2 進制，而浮點數在轉成二進制時會造成無窮迴圈，進而產生運算誤差，JS 有對此有.toFixed語法來處理浮點數問題</span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//完成這個 case 後，跳出這個 switch</span></span><br></pre></td></tr></table></figure><h3 id="4-⌫-刪除單一字元"><a href="#4-⌫-刪除單一字元" class="headerlink" title="4. ⌫ : 刪除單一字元"></a>4. ⌫ : 刪除單一字元</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> buffer == <span class="string">'⌫'</span>:<span class="comment">//如果值是⌫就把上排的值清掉，然後把下排的值退格一個字元</span></span><br><span class="line">calContentStr = <span class="string">''</span>;</span><br><span class="line">calResultStr = calResultStr.toString();</span><br><span class="line"><span class="comment">//因為calResultStr經過eval計算出來是'number'，而下方的substring運用必須為'string'</span></span><br><span class="line">calResultStr = calResultStr.substring(<span class="number">0</span>,calResultStr.length<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h3 id="5-AC-清除的功能"><a href="#5-AC-清除的功能" class="headerlink" title="5. AC : 清除的功能"></a>5. AC : 清除的功能</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> buffer == <span class="string">'AC'</span>: <span class="comment">//如果值是AC就把上下排的值都清掉</span></span><br><span class="line">calContentStr = <span class="string">''</span>;</span><br><span class="line">calResultStr = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h3 id="6-點-點在一個數值中不能重複出現，不然-0-22-33-33-這樣運算會出問題"><a href="#6-點-點在一個數值中不能重複出現，不然-0-22-33-33-這樣運算會出問題" class="headerlink" title="6. 點. : 點在一個數值中不能重複出現，不然 0.22.33+33= 這樣運算會出問題"></a>6. 點. : 點在一個數值中不能重複出現，不然 0.22.33+33= 這樣運算會出問題</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> calResultStr.indexOf(<span class="string">'.'</span>) != <span class="number">-1</span>: <span class="comment">//如果calResultStr字串內有.</span></span><br><span class="line"><span class="keyword">if</span>(buffer == <span class="string">'.'</span>)&#123;</span><br><span class="line">calResultStr += <span class="string">''</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">calResultStr += buffer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h2 id="二、使用者體驗"><a href="#二、使用者體驗" class="headerlink" title="二、使用者體驗"></a>二、使用者體驗</h2><h3 id="1-在按下等號得到答案後，如何進行之後的運算"><a href="#1-在按下等號得到答案後，如何進行之後的運算" class="headerlink" title="1. 在按下等號得到答案後，如何進行之後的運算?"></a>1. 在按下等號得到答案後，如何進行之後的運算?</h3><ul><li>按下數字時，清除全部，開始另一個新的運算。</li><li>按下加減乘除時，保留上排數值，繼續做運算。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> calContentStr.charAt(calContentStr.length<span class="number">-1</span>) == <span class="string">'='</span>: <span class="comment">//判斷等號'='後面接什麼動作，會觸發什麼情況</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isNaN</span>(<span class="built_in">parseInt</span>(buffer)+<span class="number">1</span>) == <span class="literal">false</span>)&#123; <span class="comment">//如果後面是數字，就直接把全部清空，重新開始另一個算式</span></span><br><span class="line">calContentStr = <span class="string">''</span>;</span><br><span class="line">calResultStr = <span class="string">''</span>;</span><br><span class="line">calResultStr += buffer;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'aaaa3'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(buffer == <span class="string">"+"</span> || buffer == <span class="string">'-'</span> || buffer == <span class="string">'×'</span> || buffer == <span class="string">'÷'</span>)&#123;<span class="comment">//如果是加減乘除，就把'='刪除，加上運算符號直接再做運算</span></span><br><span class="line">calContentStr = calContentStr.substring(<span class="number">0</span>,calContentStr.length<span class="number">-1</span>);</span><br><span class="line">calContentStr += buffer;</span><br><span class="line">calResultStr = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h3 id="2-數字超過計算機大小時，使文字變小"><a href="#2-數字超過計算機大小時，使文字變小" class="headerlink" title="2. 數字超過計算機大小時，使文字變小"></a>2. 數字超過計算機大小時，使文字變小</h3><p>要注意計算字串長度時，因為計算機的答案是經過 eval 計算出來的，為 ‘number’ ，因此要轉為字串我們才能統一計算字串長度大於多少時將字體大小轉換。<br>一開始我把 calResultStr 和 calContentStr 放在同一個switch裡面，但這樣會發生他只執行上面的 calResultStr 完後就跳出了， calContentStr 在下面會執行不到。所以要把兩個內容分開判斷。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> resultCheck = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">calResultStr = calResultStr.toString(); <span class="comment">//因為eval計算出來是數值，而我們這邊是用字串做運算的</span></span><br><span class="line"><span class="keyword">switch</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> calResultStr.length &gt; <span class="number">9</span> &amp;&amp; calResultStr.length &lt;= <span class="number">27</span>:</span><br><span class="line">  calResult.setAttribute(<span class="string">'style'</span>,<span class="string">'font-size: 20px'</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> calResultStr.length &gt; <span class="number">27</span>:</span><br><span class="line">  calResult.setAttribute(<span class="string">'style'</span>,<span class="string">'font-size: 12px'</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> calResultStr.length &lt;= <span class="number">9</span>:</span><br><span class="line">  calResult.setAttribute(<span class="string">'style'</span>,<span class="string">'font-size: 56px'</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> contentCheck = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> calContentStr.length &gt; <span class="number">33</span>:</span><br><span class="line">  calContent.setAttribute(<span class="string">'style'</span>,<span class="string">'font-size: 10px'</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> calContentStr.length &lt;= <span class="number">33</span>:</span><br><span class="line">  calContent.setAttribute(<span class="string">'style'</span>,<span class="string">'font-size: 16px'</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-標示出千分位，提升閱讀體驗"><a href="#3-標示出千分位，提升閱讀體驗" class="headerlink" title="3. 標示出千分位，提升閱讀體驗"></a>3. 標示出千分位，提升閱讀體驗</h3><p>這個函式大量用到 slice 的語法來切分字串。<br>因為計算機會有小數點的問題，這邊設計小數點以下不標是千分位符號。<br>因此這個函式分為兩個判斷，一個是有小數點的，一個是沒有小數點的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toThousands</span>(<span class="params">number</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> num = number.toString();</span><br><span class="line"><span class="keyword">let</span> result = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(num.indexOf(<span class="string">'.'</span>) != <span class="number">-1</span>)&#123;  <span class="comment">//如果這個字串有小數點</span></span><br><span class="line">  <span class="comment">//將這個字串分成小數點前的numBeforeDot和包含小數點後的numAfterDot</span></span><br><span class="line">  <span class="keyword">let</span> numBeforeDot = num.slice(<span class="number">0</span>,num.indexOf(<span class="string">'.'</span>)); </span><br><span class="line">  <span class="keyword">let</span> numAfterDot = num.slice(num.indexOf(<span class="string">'.'</span>),num.length);</span><br><span class="line"><span class="keyword">while</span> (numBeforeDot.length &gt; <span class="number">3</span>) &#123; </span><br><span class="line">  <span class="comment">//當num.length &gt; 3時，就一直執行下面的內容，直到num.length &lt;= 3</span></span><br><span class="line">  result = <span class="string">','</span> + numBeforeDot.slice(<span class="number">-3</span>) + result;</span><br><span class="line">  numBeforeDot = numBeforeDot.slice(<span class="number">0</span>, numBeforeDot.length - <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">  result = numBeforeDot + result + numAfterDot;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">//其他的是沒有小數點的字串</span></span><br><span class="line">  <span class="keyword">while</span> (num.length &gt; <span class="number">3</span>) &#123; <span class="comment">//當num.length &gt; 3時，就一直執行下面的內容</span></span><br><span class="line">  result = <span class="string">','</span> + num.slice(<span class="number">-3</span>) + result;</span><br><span class="line">  num = num.slice(<span class="number">0</span>, num.length - <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">  result = num + result;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、這個關卡學到的技能整理"><a href="#三、這個關卡學到的技能整理" class="headerlink" title="三、這個關卡學到的技能整理"></a>三、這個關卡學到的技能整理</h2><h3 id="1-switch內case擺放的位置"><a href="#1-switch內case擺放的位置" class="headerlink" title="1. switch內case擺放的位置"></a>1. switch內case擺放的位置</h3><p>這個關卡只使用到一個function，所有的運算都寫在裡面了，但function中為了不影響網站效率，使用switch，使用switch時，放置case的前後順序就很重要了，因為只要有一個case符合條件，跑完條件下的內容就會跳出了，如果有要先判斷的就要擺在前面。</p><h3 id="2-小數點運算時，浮點數的問題"><a href="#2-小數點運算時，浮點數的問題" class="headerlink" title="2. 小數點運算時，浮點數的問題"></a>2. 小數點運算時，浮點數的問題</h3><p>因為JS運算是依循IEEE754的規範，在運算時會轉換成2進制，而浮點數在轉成二進制時會造成無窮迴圈，進而產生運算誤差，JS有對此有.toFixed語法來處理浮點數問題。<br>parseFloat(number.toFixed(10))<br>number.toFixed(10)這邊是把數值四捨五入取到小數點後第10位，然後用parseFloat把小數點後0多的值去掉。</p><ul><li>還有另一個更精準的方法: number-precision</li></ul><p>開啟命令提示字元，路徑切換到要使用 number-precision 的資料夾下，輸入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install number-precision --save</span><br></pre></td></tr></table></figure><p>在 Html 的網頁導入，number-precision JS 語法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"node_modules/number-precision/build/index.umd.js"</span>&gt;&lt;<span class="regexp">/script&gt; /</span><span class="regexp">/放在all.js前面才讀取的到</span></span><br><span class="line"><span class="regexp">&lt;script src="js/</span>all.js<span class="string">"&gt;&lt;/script&gt; //all.js是我主要撰寫的檔案</span></span><br></pre></td></tr></table></figure><p>就可以使用 number-precision 功能了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(NP.strip(<span class="number">0.100000000000009</span>));</span><br><span class="line"><span class="comment">//result: 0.1</span></span><br></pre></td></tr></table></figure><h3 id="3-字串與字串方法"><a href="#3-字串與字串方法" class="headerlink" title="3. 字串與字串方法"></a>3. 字串與字串方法</h3><ul><li>length</li></ul><p>取得字串長度</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'123456'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.length);</span><br><span class="line"><span class="comment">//result: 6</span></span><br></pre></td></tr></table></figure><ul><li>indexOf( searchElement, fromIndex)</li></ul><p>由’前’往後搜尋字串<br>searchElement : 搜尋的字串<br>fromIndex : 搜尋範圍，預設為字串長度 (str.length)-1，也就是全部範圍</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> demo = <span class="string">'abc123abc'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(demo.indexOf(<span class="string">'abc'</span>));</span><br><span class="line"><span class="comment">// 0</span></span><br></pre></td></tr></table></figure><ul><li>lastIndexOf( searchElement, fromIndex)</li></ul><p>由’後’往前搜尋字串<br>searchElement : 搜尋的字串<br>fromIndex : 搜尋範圍，預設為字串長度 (str.length)-1，也就是全部範圍</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> demo = <span class="string">'abc123abc'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(demo.lastIndexOf(<span class="string">'abc'</span>));</span><br><span class="line"><span class="comment">// result: 6</span></span><br><span class="line"><span class="built_in">console</span>.log(demo.lastIndexOf(<span class="string">'abc'</span>,<span class="number">5</span>));</span><br><span class="line"><span class="comment">// result: 0</span></span><br><span class="line"><span class="built_in">console</span>.log(demo.lastIndexOf(<span class="string">'abc'</span>,<span class="number">7</span>));</span><br><span class="line"><span class="comment">// result: 6</span></span><br></pre></td></tr></table></figure><ul><li>search(Str)</li></ul><p>尋找字串， 無相符字串則傳回 -1<br>Str : 尋找的字串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"ABC and abc"</span></span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="string">"abc"</span>)); <span class="comment">//大小必需相符</span></span><br><span class="line"><span class="comment">// result 8</span></span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="regexp">/abc/i</span>)); <span class="comment">//忽略大小寫</span></span><br><span class="line"><span class="comment">// result 結果 0</span></span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="string">"123"</span>));</span><br><span class="line"><span class="comment">// result -1</span></span><br></pre></td></tr></table></figure><ul><li>match(Str)</li></ul><p>查找符合的字串，並回傳字串內容， 無相符字串則傳回 null<br>Str : 尋找的字串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"The rain in SPAIN stays mainly in the plain"</span>;</span><br><span class="line"><span class="comment">// 尋找符合的字串位置(/ain/)</span></span><br><span class="line"><span class="built_in">console</span>.log(str.match(<span class="regexp">/ain/</span>));</span><br><span class="line"> <span class="comment">// result: ain</span></span><br><span class="line"><span class="comment">// 重覆尋找符合的字串位置(/***/g)</span></span><br><span class="line"><span class="built_in">console</span>.log(str.match(<span class="regexp">/ain/g</span>));</span><br><span class="line"> <span class="comment">// result: ain,ain,ain</span></span><br><span class="line"><span class="comment">// 重覆尋找符合的字串位置(不分大小寫 /***/gi)</span></span><br><span class="line"><span class="built_in">console</span>.log(str.match(<span class="regexp">/ain/gi</span>));</span><br><span class="line"> <span class="comment">// result: ain,AIN,ain,ain</span></span><br><span class="line"><span class="built_in">console</span>.log(str.match(<span class="string">'123'</span>));</span><br><span class="line"> <span class="comment">// result: -1</span></span><br></pre></td></tr></table></figure><ul><li>charAt(index)</li></ul><p>傳回字串內的某個字元</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'012345678'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.charAt(<span class="number">2</span>));</span><br><span class="line"><span class="comment">//2</span></span><br></pre></td></tr></table></figure><ul><li>fromCharCode()</li></ul><p>傳回由UTF-16代表的字元</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">String</span>.fromCharCode(<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>));</span><br><span class="line"><span class="comment">//result: ABC</span></span><br></pre></td></tr></table></figure><ul><li>substring( indexStart, indexEnd)</li></ul><p>indexStart: 開始位置<br>endStart: 結束位置，實際則取到結束位置的前一個字元<br>substr(index , strLength)</p><p>index: 開始位置<br>strLength: 取的字串長度<br>傳回字串中指定區間的字串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'0123456789'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.substring(<span class="number">2</span>,<span class="number">5</span>));</span><br><span class="line"><span class="comment">// result: 234</span></span><br><span class="line"><span class="built_in">console</span>.log(str.substr(<span class="number">2</span>,<span class="number">5</span>));</span><br><span class="line"><span class="comment">// result: 23456</span></span><br></pre></td></tr></table></figure><ul><li>slice( start , end )</li></ul><p>start : 從 0 開始的索引值<br>end : 結束值，實際取的是結束的前一個值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="keyword">var</span> str1 = str.slice(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> str2 = str.slice(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> str3 = str.slice(<span class="number">-3</span>);</span><br><span class="line"><span class="comment">// str  ['a', 'b', 'c', 'd', 'e'];</span></span><br><span class="line"><span class="comment">// str1 ['b', 'c', 'd', 'e'];</span></span><br><span class="line"><span class="comment">// str2 ['b', 'c']; 雖然end值3是指d，但實際上不包含d的值</span></span><br><span class="line"><span class="comment">// str3 ['c', 'd', 'e'];</span></span><br></pre></td></tr></table></figure><ul><li>replace(searchStr, replaceStr)</li></ul><p>searchStr : 字串中要被取代掉的字串<br>replaceStr : 替換的字串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"hello world"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.replace(<span class="string">'hello'</span>,<span class="string">'goodbye'</span>));</span><br><span class="line"><span class="comment">//result: "goodbye world";</span></span><br></pre></td></tr></table></figure><ul><li>concat(stringA,stringB,…,stringX)</li></ul><p>組合字串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> strA = <span class="string">"test "</span>;</span><br><span class="line"><span class="keyword">var</span> strB = <span class="string">"String"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(strA.concat(strB));</span><br><span class="line"><span class="comment">// result: test String</span></span><br></pre></td></tr></table></figure><ul><li>split( )</li></ul><p>將字串轉換為陣列</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'Hello sunny'</span>;</span><br><span class="line"><span class="keyword">var</span> strArray = str.split(<span class="string">''</span>);</span><br><span class="line"><span class="built_in">console</span>.log(strArray[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">//result: H</span></span><br></pre></td></tr></table></figure><ul><li>toUpperCase() </li><li>toLowerCase()</li></ul><p>變更字串大小寫</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'abCD'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.toUpperCase());</span><br><span class="line"><span class="comment">//result: abcd</span></span><br><span class="line"><span class="built_in">console</span>.log(str.toLowerCase());</span><br><span class="line"><span class="comment">//result: ABCD</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷題篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷題 </tag>
            
            <tag> js 地下城 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[js 地下城 2F - 時鐘]</title>
      <link href="/Project/20200219/3130903905/"/>
      <url>/Project/20200219/3130903905/</url>
      
        <content type="html"><![CDATA[<h1 id="JS地下城-2F-時鐘"><a href="#JS地下城-2F-時鐘" class="headerlink" title="JS地下城 2F 時鐘"></a>JS地下城 2F 時鐘</h1><p><img src="https://cdn-images-1.medium.com/max/1200/1*TevTdLDt56MiSy22wI2geQ.png" alt="Image"></p><p>一開始看到這個圖，我以為我要寫CSS寫到瘋了。還好佛心老師有附圖檔阿。</p><a id="more"></a><p>一開始在想要怎麼讓時針轉，那時有想到transform: rotate()，但時鐘必須以末端為基準點。<br>上網找了一下，原來有 transform-origin:(X,Y)這個語法，可以去標出物件使用物件的哪裡作為中心點去旋轉，如果標示transform-origin:(0,0);就會從物件的左上角為中心點。<br>時針和分針的中心點是一個半圓，我要抓到剛好在半圓的中間，於是我抓了transform-origin:4px 4px;，但秒針我不太會抓，試了到最後是transform-<br>origin:6.525px 0px;這個數值跑起來最整齊。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hour</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">245px</span>;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">243.5px</span>;</span><br><span class="line"><span class="attribute">transform-origin</span>:<span class="number">4px</span> <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.minute</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">245px</span>;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">243.5px</span>;</span><br><span class="line"><span class="attribute">transform-origin</span>:<span class="number">4px</span> <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.second</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">243px</span>;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">247px</span>;</span><br><span class="line"><span class="attribute">transform-origin</span>:<span class="number">6.525px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>##Javascript<br>嘗試方向，<br>先使用 let dt = new Date();取得現在時間，<br>再將每個時間點定出各自的位置。<br>一秒一格的角度: 360/60 = 6 deg</p><ul><li>秒針的位置 = 現在秒數*6 deg</li><li>分針的位置 = 現在分鐘<em>6 deg + 現在秒數</em>6 deg(一分鐘的角度)/60</li><li>時針的位置 = 現在鐘頭*30deg(一個鐘頭的角度) + (30deg/60)</li></ul><p>讓函式一秒執行一次，將callback函式 setTimeout(‘timeGet()’,1000);放進去timeGet中。讓他一秒就回call一次。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timeGet</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">let</span> hour = dt.getHours();</span><br><span class="line"><span class="keyword">let</span> min = dt.getMinutes();</span><br><span class="line"><span class="keyword">let</span> sec = dt.getSeconds();</span><br><span class="line"><span class="keyword">let</span> secDis = <span class="number">180</span>+sec*<span class="number">6</span>;</span><br><span class="line"><span class="keyword">let</span> minDis = <span class="number">180</span>+min*<span class="number">6</span>+(<span class="number">30</span>/<span class="number">5</span>/<span class="number">60</span>*sec);</span><br><span class="line"><span class="keyword">let</span> hourDis = <span class="number">-90</span>+hour*<span class="number">30</span>+(<span class="number">30</span>/<span class="number">60</span>*min);</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.js-second'</span>).setAttribute(<span class="string">'style'</span>,<span class="string">'transform: rotate('</span>+secDis+<span class="string">'deg);'</span>);</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.js-minute'</span>).setAttribute(<span class="string">'style'</span>,<span class="string">'transform: rotate('</span>+minDis+<span class="string">'deg);'</span>);</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.js-hour'</span>).setAttribute(<span class="string">'style'</span>,<span class="string">'transform: rotate('</span>+hourDis+<span class="string">'deg);'</span>);</span><br><span class="line">setTimeout(<span class="string">'timeGet()'</span>,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">timeGet();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷題篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷題 </tag>
            
            <tag> js 地下城 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[js 地下城 1F - 第一層]</title>
      <link href="/Project/20200215/3360262196/"/>
      <url>/Project/20200215/3360262196/</url>
      
        <content type="html"><![CDATA[<h1 id="JS地下城-1F-九九乘法表"><a href="#JS地下城-1F-九九乘法表" class="headerlink" title="JS地下城 1F 九九乘法表"></a>JS地下城 1F 九九乘法表</h1><p><img src="https://miro.medium.com/max/527/1*UKh02viS_-Roi-yL-ARpzw.png" alt="Image"></p><h2 id="練習目標"><a href="#練習目標" class="headerlink" title="練習目標:"></a>練習目標:</h2><p><strong>JavaScript:</strong></p><ol><li>JS的命名與CSS分開</li></ol><p><strong>Sass:</strong></p><ol start="2"><li>使用@import分割檔案</li><li>使用自己的格線系統</li><li>類別階層不超過四層為原則</li><li>不使用 ID，一律使用</li><li>Smacss — 模組化核心語法</li><li>一率採用小駝峰式命名<a id="more"></a>一陣子沒練習感覺就會忘記，一開始的排版居然就讓我想了一陣子…<br>四個角的x一開始我用flex，但距離總是抓不對，<br>翻了之前的HTML/CSS的筆記才想起還有before/after的屬性了。<br>要記得之後看到前後有插入東西的排版要想起before/after，<br>開始進入正題…<h2 id="Smacss-—-模組化核心語法"><a href="#Smacss-—-模組化核心語法" class="headerlink" title="Smacss — 模組化核心語法"></a>Smacss — 模組化核心語法</h2>使用BS4習慣後，對於每次都要為特定的HTML標籤命名寫屬性感到麻煩，<br>這時使用each+ Sass Maps就很方便。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$map&#123;</span><br><span class="line">  key1: value1,//value後面是,結尾</span><br><span class="line">  <span class="selector-tag">key2</span>: <span class="selector-tag">value2</span>,</span><br><span class="line">  <span class="selector-tag">key3</span>: <span class="selector-tag">value3</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-注意key的名稱不能重複。"><a href="#1-注意key的名稱不能重複。" class="headerlink" title="1. 注意key的名稱不能重複。"></a>1. 注意key的名稱不能重複。</h3><h3 id="2-key-value可以是各種Sass資料型態"><a href="#2-key-value可以是各種Sass資料型態" class="headerlink" title="2. key/value可以是各種Sass資料型態"></a>2. key/value可以是各種Sass資料型態</h3><ul><li>字串: 可以有上引號也可以沒有。“微軟正黑體”、nowrap。</li><li>數值: 可以有單位也可以沒有單位。12、12px。</li><li>顏色: 可以是顏色。#fffff、rgba(255,255,255)。</li><li>數值列表: 列表中間可以是空白隔開，或是用逗號隔開。10px 20px 10px 20px、 Arial, sans-serif…..</li><li>布林: true、false</li><li>函式: meta.get-function()、call()<h3 id="3-Map函式運用"><a href="#3-Map函式運用" class="headerlink" title="3. Map函式運用"></a>3. Map函式運用</h3></li></ul><p>map-get(map, key): 回傳指定的key的value。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: (“small”: 12px, “normal”: 18px, “large”: 24px)</span><br><span class="line">map-get($font-sizes, “small”)</span><br><span class="line"><span class="selector-tag">Result</span>: 12<span class="selector-tag">px</span></span><br></pre></td></tr></table></figure><p>map-has-key(map, key): 檢查map裡面有沒有指定的key。確認有無後回傳true或false。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">map-has-key($font-sizes, "big")</span><br><span class="line"><span class="selector-tag">Result</span>: <span class="selector-tag">false</span></span><br></pre></td></tr></table></figure><p>map-keys(map): 回傳map裡面所有的key</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">map-keys($font-sizes)</span><br><span class="line"><span class="selector-tag">Result</span>: "<span class="selector-tag">small</span>", "<span class="selector-tag">normal</span>, "<span class="selector-tag">large</span>"</span><br></pre></td></tr></table></figure><p>map-merge(map1, map2): 合併map1和map2</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">$font-sizes2: ("x-large": 30px, "xx-large": 36px)</span><br><span class="line">map-merge($font-sizes, $font-sizes2)</span><br><span class="line"><span class="selector-tag">Result</span>: "<span class="selector-tag">small</span>": 12<span class="selector-tag">px</span>, "<span class="selector-tag">normal</span>": 18<span class="selector-tag">px</span>, "<span class="selector-tag">large</span>": 24<span class="selector-tag">px</span>, "<span class="selector-tag">x-large</span>": 30<span class="selector-tag">px</span>, "<span class="selector-tag">xx-large</span>": 36<span class="selector-tag">px</span></span><br></pre></td></tr></table></figure><p>map-remove(map, keys..): 移除map中指定的key</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">map-remove($font-sizes, "small")</span><br><span class="line"><span class="selector-tag">Result</span>: ("<span class="selector-tag">normal</span>": 18<span class="selector-tag">px</span>, "<span class="selector-tag">large</span>": 24<span class="selector-tag">px</span>)</span><br><span class="line">map-remove($font-sizes, "small", "large")</span><br><span class="line"><span class="selector-tag">Result</span>: ("<span class="selector-tag">normal</span>": 18<span class="selector-tag">px</span>)</span><br></pre></td></tr></table></figure><p>map-values(map): 回傳map中所有value的值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">map-values($font-sizes)</span><br><span class="line"><span class="selector-tag">Result</span>: 12<span class="selector-tag">px</span>, 18<span class="selector-tag">px</span>, 24<span class="selector-tag">px</span></span><br></pre></td></tr></table></figure><h3 id="4-以下為例"><a href="#4-以下為例" class="headerlink" title="4. 以下為例:"></a>4. 以下為例:</h3><p>Sass Maps如其名，就像一張地圖，map中有key和value，透過each(指南針)去搜尋資料。<br>@each $name, $color in $type {….}<br>@each像是for迴圈一樣，一一去對照$type中的key。<br>$name,$color 則是對應 $type中的key和value，以逗號分界，逗號前的$name就是key，逗號後的$color就是value<br>in $type 就是指定在這個名為type的map中找資料。<br>#{$name} 因為變數無法直接接字串，如果希望變數可以連結字串的話，就得用#{變數}包起來。<br>=&gt;透過each的方法，就能批次組合出class名稱，text-primary、bg-white….</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$type: (</span><br><span class="line">//key: value</span><br><span class="line"><span class="selector-tag">primary</span>: <span class="selector-id">#2eb738</span>,</span><br><span class="line"><span class="selector-tag">white</span>: <span class="selector-id">#ffffff</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">@each</span> $name,$color in $type&#123;</span><br><span class="line">  .text-#&#123;$name&#125;&#123;</span><br><span class="line">    color: $color;</span><br><span class="line">  &#125;</span><br><span class="line">  .bg-#&#123;$name&#125;&#123;</span><br><span class="line">    background-color: $color;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入外部字體"><a href="#插入外部字體" class="headerlink" title="插入外部字體"></a>插入外部字體</h2><p>這好像有點基本，但是我之前都沒使用過…(慚愧)<br>因為我使用的是Sass編輯我的CSS，因為資料夾位置不同，Sass有兩層資料夾，CSS只有一層，但是我在Sass編譯時，emmet也會很”貼心”的讓你../../從Sass資料夾回兩層去找font所在的資料夾，而編譯出的CSS也會../../找兩層的資料夾，但實際HTML讀取到的是CSS那個檔案阿，只有../一層。這邊要特別注意。</p><p><img src="https://miro.medium.com/max/2648/1*Qc94zEdYUSUYESpQXdRXrQ.png" alt="Image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">font-family: 'HelveticaNeue'; //定義插入字體的名字</span><br><span class="line">src: url('../font/helveticaneue-webfont.woff2') format('woff2'),</span><br><span class="line">// </span><br><span class="line">url('../font/HelveticaNeue.eot') format('opentype'),</span><br><span class="line">//  舊版 IE (IE9 之下) 瀏覽器</span><br><span class="line">url('../font/HelveticaNeue.ttf') format('truetype'), </span><br><span class="line">//  舊版 Android (4.4 版以下) 瀏覽器</span><br><span class="line">url('../font/helveticaneue-webfont.woff') format('woff');</span><br><span class="line">//  大多數瀏覽器(包含chrome)，但在許多較舊的瀏覽器中無法使用</span><br><span class="line"><span class="selector-tag">font-weight</span>: <span class="selector-tag">normal</span>;</span><br><span class="line">//確認是否是font-weight: normal的屬性，不是就不需要下載，並不是增加css屬性</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://cloudconvert.com/" target="_blank" rel="noopener">字型轉檔的網站</a><br>透過 local () 指令，可以參照、載入及使用本機安裝的字型。<br>透過 url () 指令，可以載入外部字型，而且該指令可以包含一個可選的 format () 提示，指示由提供的網址所參照的字型格式。<br><a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/webfont-optimization?hl=zh-tw" target="_blank" rel="noopener">資料參考網站</a></p><h2 id="九九乘法表排版"><a href="#九九乘法表排版" class="headerlink" title="九九乘法表排版"></a>九九乘法表排版</h2><p><img src="https://miro.medium.com/max/530/1*Us-K4TN7OqjkaOeSR2T5zA.png" alt="Image"></p><p>首先看上層，最大的2的高度和三個乘法算式是等高，因此去抓出右邊三個算式的文字高度33px加上margin的高度8px，總共是123px。<br>這裡的重點是將最大的2的line-height設定為123px，讓他和三個算式等高，這樣排版起來就可以整齊了。</p><h2 id="使footer置底"><a href="#使footer置底" class="headerlink" title="使footer置底"></a>使footer置底</h2><p><img src="https://miro.medium.com/max/2870/1*OuIng8CzPtaDsZn3nBo22w.png" alt="Image"></p><p>透過將footer補滿上一層的高度，讓footer置底。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content</span>&#123;</span><br><span class="line">min-height: calc(100vh - 34px);//設定最小高度讓footer可以在高度不足的情況也可以置底</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這邊透過設置min-height: content(100vh)減掉footer的高度(34px)，使footer置底。<br>注意部要寫成height了，不然整個畫面的高度就會被限制住，當內容增加時就部會自適應延伸了。<br>補充: 100vh 指的是螢幕可視範圍高度的百分比</p><h2 id="Javacript"><a href="#Javacript" class="headerlink" title="Javacript"></a>Javacript</h2><p>JS部分主要是分兩個迴圈，<br>第一個迴圈加入外框和數字標題，<br>主要框架都建立完成後，第二個雙迴圈加入九九乘法的算式，避免把原本裡面的內容洗掉，不用innerHTML，改用createElement。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> content = <span class="built_in">document</span>.querySelector(<span class="string">'.js-content'</span>);</span><br><span class="line"><span class="comment">//先將第一個標題存入str</span></span><br><span class="line"><span class="keyword">let</span> str =</span><br><span class="line"><span class="string">`&lt;div class="col-4 d-flex flex-col justify-content-center align-items-center mb-4"&gt;</span></span><br><span class="line"><span class="string">&lt;div class="title-upperLine"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;span class="title-CH"&gt;九九乘法表&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;span class="title-ENG"&gt;MULTIPLICATION CHART&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;div class="title-underLine"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;`</span>;</span><br><span class="line"><span class="comment">//加入表格外框和數字標題</span></span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> i = <span class="number">2</span> ; i &lt; <span class="number">10</span> ; i++)&#123;</span><br><span class="line"><span class="keyword">let</span> mulItem =</span><br><span class="line"><span class="string">`&lt;div class="col-4"&gt;</span></span><br><span class="line"><span class="string"> &lt;div class="bg-white l-block d-flex flex-col flex-wrap align-content-between js-numberTable"&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="num-title"&gt;<span class="subst">$&#123;i&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;`</span>;</span><br><span class="line">str += mulItem;</span><br><span class="line">&#125;</span><br><span class="line">content.innerHTML = str;</span><br><span class="line"><span class="comment">//加入算式的部分</span></span><br><span class="line"><span class="keyword">let</span> numberTable = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.js-numberTable'</span>);</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> i = <span class="number">2</span> ; i &lt; <span class="number">10</span> ; i++)&#123;</span><br><span class="line"> <span class="keyword">for</span>( <span class="keyword">let</span> j = <span class="number">1</span> ; j &lt; <span class="number">10</span> ; j ++)&#123;</span><br><span class="line">  <span class="keyword">let</span> addCount = <span class="built_in">document</span>.createElement(<span class="string">'p'</span>);</span><br><span class="line">  addCount.textContent = <span class="string">`<span class="subst">$&#123;i&#125;</span> x <span class="subst">$&#123;j&#125;</span> = <span class="subst">$&#123;i*j&#125;</span>`</span> ;</span><br><span class="line">  addCount.setAttribute(<span class="string">'class'</span>,<span class="string">'num-item'</span>);</span><br><span class="line">  numberTable[i<span class="number">-2</span>].appendChild(addCount);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷題篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷題 </tag>
            
            <tag> js 地下城 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
