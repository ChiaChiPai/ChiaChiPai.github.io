<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[js 地下層 - 第一層]</title>
      <link href="/2020/02/15/%E7%AC%AC%E4%B8%80%E5%B1%A4/"/>
      <url>/2020/02/15/%E7%AC%AC%E4%B8%80%E5%B1%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="JS地下城-1F-九九乘法表"><a href="#JS地下城-1F-九九乘法表" class="headerlink" title="JS地下城 1F 九九乘法表"></a>JS地下城 1F 九九乘法表</h1><p><img src="https://miro.medium.com/max/527/1*UKh02viS_-Roi-yL-ARpzw.png" alt="Image"></p><h2 id="練習目標"><a href="#練習目標" class="headerlink" title="練習目標:"></a>練習目標:</h2><p><strong>JavaScript:</strong></p><ol><li>JS的命名與CSS分開</li></ol><p><strong>Sass:</strong></p><ol start="2"><li>使用@import分割檔案</li><li>使用自己的格線系統</li><li>類別階層不超過四層為原則</li><li>不使用 ID，一律使用</li><li>Smacss — 模組化核心語法</li><li>一率採用小駝峰式命名<a id="more"></a>一陣子沒練習感覺就會忘記，一開始的排版居然就讓我想了一陣子…<br>四個角的x一開始我用flex，但距離總是抓不對，<br>翻了之前的HTML/CSS的筆記才想起還有before/after的屬性了。<br>要記得之後看到前後有插入東西的排版要想起before/after，<br>開始進入正題…<h2 id="Smacss-—-模組化核心語法"><a href="#Smacss-—-模組化核心語法" class="headerlink" title="Smacss — 模組化核心語法"></a>Smacss — 模組化核心語法</h2>使用BS4習慣後，對於每次都要為特定的HTML標籤命名寫屬性感到麻煩，<br>這時使用each+ Sass Maps就很方便。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$map&#123;</span><br><span class="line">  key1: value1,//value後面是,結尾</span><br><span class="line">  <span class="selector-tag">key2</span>: <span class="selector-tag">value2</span>,</span><br><span class="line">  <span class="selector-tag">key3</span>: <span class="selector-tag">value3</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-注意key的名稱不能重複。"><a href="#1-注意key的名稱不能重複。" class="headerlink" title="1. 注意key的名稱不能重複。"></a>1. 注意key的名稱不能重複。</h3><h3 id="2-key-value可以是各種Sass資料型態"><a href="#2-key-value可以是各種Sass資料型態" class="headerlink" title="2. key/value可以是各種Sass資料型態"></a>2. key/value可以是各種Sass資料型態</h3><ul><li>字串: 可以有上引號也可以沒有。“微軟正黑體”、nowrap。</li><li>數值: 可以有單位也可以沒有單位。12、12px。</li><li>顏色: 可以是顏色。#fffff、rgba(255,255,255)。</li><li>數值列表: 列表中間可以是空白隔開，或是用逗號隔開。10px 20px 10px 20px、 Arial, sans-serif…..</li><li>布林: true、false</li><li>函式: meta.get-function()、call()<h3 id="3-Map函式運用"><a href="#3-Map函式運用" class="headerlink" title="3. Map函式運用"></a>3. Map函式運用</h3></li></ul><p>map-get(map, key): 回傳指定的key的value。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: (“small”: 12px, “normal”: 18px, “large”: 24px)</span><br><span class="line">map-get($font-sizes, “small”)</span><br><span class="line"><span class="selector-tag">Result</span>: 12<span class="selector-tag">px</span></span><br></pre></td></tr></table></figure><p>map-has-key(map, key): 檢查map裡面有沒有指定的key。確認有無後回傳true或false。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">map-has-key($font-sizes, "big")</span><br><span class="line"><span class="selector-tag">Result</span>: <span class="selector-tag">false</span></span><br></pre></td></tr></table></figure><p>map-keys(map): 回傳map裡面所有的key</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">map-keys($font-sizes)</span><br><span class="line"><span class="selector-tag">Result</span>: "<span class="selector-tag">small</span>", "<span class="selector-tag">normal</span>, "<span class="selector-tag">large</span>"</span><br></pre></td></tr></table></figure><p>map-merge(map1, map2): 合併map1和map2</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">$font-sizes2: ("x-large": 30px, "xx-large": 36px)</span><br><span class="line">map-merge($font-sizes, $font-sizes2)</span><br><span class="line"><span class="selector-tag">Result</span>: "<span class="selector-tag">small</span>": 12<span class="selector-tag">px</span>, "<span class="selector-tag">normal</span>": 18<span class="selector-tag">px</span>, "<span class="selector-tag">large</span>": 24<span class="selector-tag">px</span>, "<span class="selector-tag">x-large</span>": 30<span class="selector-tag">px</span>, "<span class="selector-tag">xx-large</span>": 36<span class="selector-tag">px</span></span><br></pre></td></tr></table></figure><p>map-remove(map, keys..): 移除map中指定的key</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">map-remove($font-sizes, "small")</span><br><span class="line"><span class="selector-tag">Result</span>: ("<span class="selector-tag">normal</span>": 18<span class="selector-tag">px</span>, "<span class="selector-tag">large</span>": 24<span class="selector-tag">px</span>)</span><br><span class="line">map-remove($font-sizes, "small", "large")</span><br><span class="line"><span class="selector-tag">Result</span>: ("<span class="selector-tag">normal</span>": 18<span class="selector-tag">px</span>)</span><br></pre></td></tr></table></figure><p>map-values(map): 回傳map中所有value的值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$font-sizes: ("small": 12px, "normal": 18px, "large": 24px)</span><br><span class="line">map-values($font-sizes)</span><br><span class="line"><span class="selector-tag">Result</span>: 12<span class="selector-tag">px</span>, 18<span class="selector-tag">px</span>, 24<span class="selector-tag">px</span></span><br></pre></td></tr></table></figure><h3 id="4-以下為例"><a href="#4-以下為例" class="headerlink" title="4. 以下為例:"></a>4. 以下為例:</h3><p>Sass Maps如其名，就像一張地圖，map中有key和value，透過each(指南針)去搜尋資料。<br>@each $name, $color in $type {….}<br>@each像是for迴圈一樣，一一去對照$type中的key。<br>$name,$color 則是對應 $type中的key和value，以逗號分界，逗號前的$name就是key，逗號後的$color就是value<br>in $type 就是指定在這個名為type的map中找資料。<br>#{$name} 因為變數無法直接接字串，如果希望變數可以連結字串的話，就得用#{變數}包起來。<br>=&gt;透過each的方法，就能批次組合出class名稱，text-primary、bg-white….</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$type: (</span><br><span class="line">//key: value</span><br><span class="line"><span class="selector-tag">primary</span>: <span class="selector-id">#2eb738</span>,</span><br><span class="line"><span class="selector-tag">white</span>: <span class="selector-id">#ffffff</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">@each</span> $name,$color in $type&#123;</span><br><span class="line">  .text-#&#123;$name&#125;&#123;</span><br><span class="line">    color: $color;</span><br><span class="line">  &#125;</span><br><span class="line">  .bg-#&#123;$name&#125;&#123;</span><br><span class="line">    background-color: $color;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入外部字體"><a href="#插入外部字體" class="headerlink" title="插入外部字體"></a>插入外部字體</h2><p>這好像有點基本，但是我之前都沒使用過…(慚愧)<br>因為我使用的是Sass編輯我的CSS，因為資料夾位置不同，Sass有兩層資料夾，CSS只有一層，但是我在Sass編譯時，emmet也會很”貼心”的讓你../../從Sass資料夾回兩層去找font所在的資料夾，而編譯出的CSS也會../../找兩層的資料夾，但實際HTML讀取到的是CSS那個檔案阿，只有../一層。這邊要特別注意。</p><p><img src="https://miro.medium.com/max/2648/1*Qc94zEdYUSUYESpQXdRXrQ.png" alt="Image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">font-family: 'HelveticaNeue'; //定義插入字體的名字</span><br><span class="line">src: url('../font/helveticaneue-webfont.woff2') format('woff2'),</span><br><span class="line">// </span><br><span class="line">url('../font/HelveticaNeue.eot') format('opentype'),</span><br><span class="line">//  舊版 IE (IE9 之下) 瀏覽器</span><br><span class="line">url('../font/HelveticaNeue.ttf') format('truetype'), </span><br><span class="line">//  舊版 Android (4.4 版以下) 瀏覽器</span><br><span class="line">url('../font/helveticaneue-webfont.woff') format('woff');</span><br><span class="line">//  大多數瀏覽器(包含chrome)，但在許多較舊的瀏覽器中無法使用</span><br><span class="line"><span class="selector-tag">font-weight</span>: <span class="selector-tag">normal</span>;</span><br><span class="line">//確認是否是font-weight: normal的屬性，不是就不需要下載，並不是增加css屬性</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://cloudconvert.com/" target="_blank" rel="noopener">字型轉檔的網站</a><br>透過 local () 指令，可以參照、載入及使用本機安裝的字型。<br>透過 url () 指令，可以載入外部字型，而且該指令可以包含一個可選的 format () 提示，指示由提供的網址所參照的字型格式。<br><a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/webfont-optimization?hl=zh-tw" target="_blank" rel="noopener">資料參考網站</a></p><h2 id="九九乘法表排版"><a href="#九九乘法表排版" class="headerlink" title="九九乘法表排版"></a>九九乘法表排版</h2><p><img src="https://miro.medium.com/max/530/1*Us-K4TN7OqjkaOeSR2T5zA.png" alt="Image"></p><p>首先看上層，最大的2的高度和三個乘法算式是等高，因此去抓出右邊三個算式的文字高度33px加上margin的高度8px，總共是123px。<br>這裡的重點是將最大的2的line-height設定為123px，讓他和三個算式等高，這樣排版起來就可以整齊了。</p><h2 id="使footer置底"><a href="#使footer置底" class="headerlink" title="使footer置底"></a>使footer置底</h2><p><img src="https://miro.medium.com/max/2870/1*OuIng8CzPtaDsZn3nBo22w.png" alt="Image"></p><p>透過將footer補滿上一層的高度，讓footer置底。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content</span>&#123;</span><br><span class="line">min-height: calc(100vh - 34px);//設定最小高度讓footer可以在高度不足的情況也可以置底</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這邊透過設置min-height: content(100vh)減掉footer的高度(34px)，使footer置底。<br>注意部要寫成height了，不然整個畫面的高度就會被限制住，當內容增加時就部會自適應延伸了。<br>補充: 100vh 指的是螢幕可視範圍高度的百分比</p><h2 id="Javacript"><a href="#Javacript" class="headerlink" title="Javacript"></a>Javacript</h2><p>JS部分主要是分兩個迴圈，<br>第一個迴圈加入外框和數字標題，<br>主要框架都建立完成後，第二個雙迴圈加入九九乘法的算式，避免把原本裡面的內容洗掉，不用innerHTML，改用createElement。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> content = <span class="built_in">document</span>.querySelector(<span class="string">'.js-content'</span>);</span><br><span class="line"><span class="comment">//先將第一個標題存入str</span></span><br><span class="line"><span class="keyword">let</span> str =</span><br><span class="line"><span class="string">`&lt;div class="col-4 d-flex flex-col justify-content-center align-items-center mb-4"&gt;</span></span><br><span class="line"><span class="string">&lt;div class="title-upperLine"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;span class="title-CH"&gt;九九乘法表&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;span class="title-ENG"&gt;MULTIPLICATION CHART&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;div class="title-underLine"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;`</span>;</span><br><span class="line"><span class="comment">//加入表格外框和數字標題</span></span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> i = <span class="number">2</span> ; i &lt; <span class="number">10</span> ; i++)&#123;</span><br><span class="line"><span class="keyword">let</span> mulItem =</span><br><span class="line"><span class="string">`&lt;div class="col-4"&gt;</span></span><br><span class="line"><span class="string"> &lt;div class="bg-white l-block d-flex flex-col flex-wrap align-content-between js-numberTable"&gt;</span></span><br><span class="line"><span class="string">  &lt;span class="num-title"&gt;<span class="subst">$&#123;i&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;`</span>;</span><br><span class="line">str += mulItem;</span><br><span class="line">&#125;</span><br><span class="line">content.innerHTML = str;</span><br><span class="line"><span class="comment">//加入算式的部分</span></span><br><span class="line"><span class="keyword">let</span> numberTable = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.js-numberTable'</span>);</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> i = <span class="number">2</span> ; i &lt; <span class="number">10</span> ; i++)&#123;</span><br><span class="line"> <span class="keyword">for</span>( <span class="keyword">let</span> j = <span class="number">1</span> ; j &lt; <span class="number">10</span> ; j ++)&#123;</span><br><span class="line">  <span class="keyword">let</span> addCount = <span class="built_in">document</span>.createElement(<span class="string">'p'</span>);</span><br><span class="line">  addCount.textContent = <span class="string">`<span class="subst">$&#123;i&#125;</span> x <span class="subst">$&#123;j&#125;</span> = <span class="subst">$&#123;i*j&#125;</span>`</span> ;</span><br><span class="line">  addCount.setAttribute(<span class="string">'class'</span>,<span class="string">'num-item'</span>);</span><br><span class="line">  numberTable[i<span class="number">-2</span>].appendChild(addCount);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷題篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷題 </tag>
            
            <tag> js 地下層 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[title]</title>
      <link href="/2020/02/15/title/"/>
      <url>/2020/02/15/title/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/15/hello-world/"/>
      <url>/2020/02/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
